// Package mangadex provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package mangadex

import (
	"encoding/json"
	"fmt"
	"time"

	"github.com/oapi-codegen/runtime"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerScopes = "Bearer.Scopes"
)

// Defines values for ApiClientType.
const (
	ApiClientTypeApiClient ApiClientType = "api_client"
)

// Defines values for ApiClientAttributesState.
const (
	ApiClientAttributesStateApproved     ApiClientAttributesState = "approved"
	ApiClientAttributesStateAutoapproved ApiClientAttributesState = "autoapproved"
	ApiClientAttributesStateRejected     ApiClientAttributesState = "rejected"
	ApiClientAttributesStateRequested    ApiClientAttributesState = "requested"
)

// Defines values for ApiClientCreateProfile.
const (
	Personal ApiClientCreateProfile = "personal"
)

// Defines values for AuthorType.
const (
	AuthorTypeAuthor AuthorType = "author"
)

// Defines values for ChapterType.
const (
	ChapterTypeChapter ChapterType = "chapter"
)

// Defines values for ChapterResponseResult.
const (
	ChapterResponseResultError ChapterResponseResult = "error"
	ChapterResponseResultOk    ChapterResponseResult = "ok"
)

// Defines values for CoverType.
const (
	CoverArt CoverType = "cover_art"
)

// Defines values for CustomListType.
const (
	CustomListTypeCustomList CustomListType = "custom_list"
)

// Defines values for CustomListAttributesVisibility.
const (
	CustomListAttributesVisibilityPrivate CustomListAttributesVisibility = "private"
	CustomListAttributesVisibilityPublic  CustomListAttributesVisibility = "public"
)

// Defines values for CustomListCreateVisibility.
const (
	CustomListCreateVisibilityPrivate CustomListCreateVisibility = "private"
	CustomListCreateVisibilityPublic  CustomListCreateVisibility = "public"
)

// Defines values for CustomListEditVisibility.
const (
	Private CustomListEditVisibility = "private"
	Public  CustomListEditVisibility = "public"
)

// Defines values for CustomListResponseResult.
const (
	CustomListResponseResultError CustomListResponseResult = "error"
	CustomListResponseResultOk    CustomListResponseResult = "ok"
)

// Defines values for LoginResponseResult.
const (
	LoginResponseResultError LoginResponseResult = "error"
	LoginResponseResultOk    LoginResponseResult = "ok"
)

// Defines values for LogoutResponseResult.
const (
	LogoutResponseResultError LogoutResponseResult = "error"
	LogoutResponseResultOk    LogoutResponseResult = "ok"
)

// Defines values for MangaType.
const (
	MangaTypeManga MangaType = "manga"
)

// Defines values for MangaAttributesContentRating.
const (
	MangaAttributesContentRatingErotica      MangaAttributesContentRating = "erotica"
	MangaAttributesContentRatingPornographic MangaAttributesContentRating = "pornographic"
	MangaAttributesContentRatingSafe         MangaAttributesContentRating = "safe"
	MangaAttributesContentRatingSuggestive   MangaAttributesContentRating = "suggestive"
)

// Defines values for MangaAttributesPublicationDemographic.
const (
	MangaAttributesPublicationDemographicJosei   MangaAttributesPublicationDemographic = "josei"
	MangaAttributesPublicationDemographicSeinen  MangaAttributesPublicationDemographic = "seinen"
	MangaAttributesPublicationDemographicShoujo  MangaAttributesPublicationDemographic = "shoujo"
	MangaAttributesPublicationDemographicShounen MangaAttributesPublicationDemographic = "shounen"
)

// Defines values for MangaAttributesState.
const (
	MangaAttributesStateDraft     MangaAttributesState = "draft"
	MangaAttributesStatePublished MangaAttributesState = "published"
	MangaAttributesStateRejected  MangaAttributesState = "rejected"
	MangaAttributesStateSubmitted MangaAttributesState = "submitted"
)

// Defines values for MangaAttributesStatus.
const (
	MangaAttributesStatusCancelled MangaAttributesStatus = "cancelled"
	MangaAttributesStatusCompleted MangaAttributesStatus = "completed"
	MangaAttributesStatusHiatus    MangaAttributesStatus = "hiatus"
	MangaAttributesStatusOngoing   MangaAttributesStatus = "ongoing"
)

// Defines values for MangaCreateContentRating.
const (
	MangaCreateContentRatingErotica      MangaCreateContentRating = "erotica"
	MangaCreateContentRatingPornographic MangaCreateContentRating = "pornographic"
	MangaCreateContentRatingSafe         MangaCreateContentRating = "safe"
	MangaCreateContentRatingSuggestive   MangaCreateContentRating = "suggestive"
)

// Defines values for MangaCreatePublicationDemographic.
const (
	MangaCreatePublicationDemographicJosei   MangaCreatePublicationDemographic = "josei"
	MangaCreatePublicationDemographicSeinen  MangaCreatePublicationDemographic = "seinen"
	MangaCreatePublicationDemographicShoujo  MangaCreatePublicationDemographic = "shoujo"
	MangaCreatePublicationDemographicShounen MangaCreatePublicationDemographic = "shounen"
)

// Defines values for MangaCreateStatus.
const (
	MangaCreateStatusCancelled MangaCreateStatus = "cancelled"
	MangaCreateStatusCompleted MangaCreateStatus = "completed"
	MangaCreateStatusHiatus    MangaCreateStatus = "hiatus"
	MangaCreateStatusOngoing   MangaCreateStatus = "ongoing"
)

// Defines values for MangaEditContentRating.
const (
	MangaEditContentRatingErotica      MangaEditContentRating = "erotica"
	MangaEditContentRatingPornographic MangaEditContentRating = "pornographic"
	MangaEditContentRatingSafe         MangaEditContentRating = "safe"
	MangaEditContentRatingSuggestive   MangaEditContentRating = "suggestive"
)

// Defines values for MangaEditPublicationDemographic.
const (
	MangaEditPublicationDemographicJosei   MangaEditPublicationDemographic = "josei"
	MangaEditPublicationDemographicSeinen  MangaEditPublicationDemographic = "seinen"
	MangaEditPublicationDemographicShoujo  MangaEditPublicationDemographic = "shoujo"
	MangaEditPublicationDemographicShounen MangaEditPublicationDemographic = "shounen"
)

// Defines values for MangaEditStatus.
const (
	MangaEditStatusCancelled MangaEditStatus = "cancelled"
	MangaEditStatusCompleted MangaEditStatus = "completed"
	MangaEditStatusHiatus    MangaEditStatus = "hiatus"
	MangaEditStatusOngoing   MangaEditStatus = "ongoing"
)

// Defines values for MangaRelationType.
const (
	MangaRelationTypeMangaRelation MangaRelationType = "manga_relation"
)

// Defines values for MangaRelationAttributesRelation.
const (
	MangaRelationAttributesRelationAdaptedFrom      MangaRelationAttributesRelation = "adapted_from"
	MangaRelationAttributesRelationAlternateStory   MangaRelationAttributesRelation = "alternate_story"
	MangaRelationAttributesRelationAlternateVersion MangaRelationAttributesRelation = "alternate_version"
	MangaRelationAttributesRelationBasedOn          MangaRelationAttributesRelation = "based_on"
	MangaRelationAttributesRelationColored          MangaRelationAttributesRelation = "colored"
	MangaRelationAttributesRelationDoujinshi        MangaRelationAttributesRelation = "doujinshi"
	MangaRelationAttributesRelationMainStory        MangaRelationAttributesRelation = "main_story"
	MangaRelationAttributesRelationMonochrome       MangaRelationAttributesRelation = "monochrome"
	MangaRelationAttributesRelationPrequel          MangaRelationAttributesRelation = "prequel"
	MangaRelationAttributesRelationPreserialization MangaRelationAttributesRelation = "preserialization"
	MangaRelationAttributesRelationSameFranchise    MangaRelationAttributesRelation = "same_franchise"
	MangaRelationAttributesRelationSequel           MangaRelationAttributesRelation = "sequel"
	MangaRelationAttributesRelationSerialization    MangaRelationAttributesRelation = "serialization"
	MangaRelationAttributesRelationSharedUniverse   MangaRelationAttributesRelation = "shared_universe"
	MangaRelationAttributesRelationSideStory        MangaRelationAttributesRelation = "side_story"
	MangaRelationAttributesRelationSpinOff          MangaRelationAttributesRelation = "spin_off"
)

// Defines values for MangaRelationCreateRelation.
const (
	MangaRelationCreateRelationAdaptedFrom      MangaRelationCreateRelation = "adapted_from"
	MangaRelationCreateRelationAlternateStory   MangaRelationCreateRelation = "alternate_story"
	MangaRelationCreateRelationAlternateVersion MangaRelationCreateRelation = "alternate_version"
	MangaRelationCreateRelationBasedOn          MangaRelationCreateRelation = "based_on"
	MangaRelationCreateRelationColored          MangaRelationCreateRelation = "colored"
	MangaRelationCreateRelationDoujinshi        MangaRelationCreateRelation = "doujinshi"
	MangaRelationCreateRelationMainStory        MangaRelationCreateRelation = "main_story"
	MangaRelationCreateRelationMonochrome       MangaRelationCreateRelation = "monochrome"
	MangaRelationCreateRelationPrequel          MangaRelationCreateRelation = "prequel"
	MangaRelationCreateRelationPreserialization MangaRelationCreateRelation = "preserialization"
	MangaRelationCreateRelationSameFranchise    MangaRelationCreateRelation = "same_franchise"
	MangaRelationCreateRelationSequel           MangaRelationCreateRelation = "sequel"
	MangaRelationCreateRelationSerialization    MangaRelationCreateRelation = "serialization"
	MangaRelationCreateRelationSharedUniverse   MangaRelationCreateRelation = "shared_universe"
	MangaRelationCreateRelationSideStory        MangaRelationCreateRelation = "side_story"
	MangaRelationCreateRelationSpinOff          MangaRelationCreateRelation = "spin_off"
)

// Defines values for MangaRelationRequestRelation.
const (
	MangaRelationRequestRelationAdaptedFrom      MangaRelationRequestRelation = "adapted_from"
	MangaRelationRequestRelationAlternateStory   MangaRelationRequestRelation = "alternate_story"
	MangaRelationRequestRelationAlternateVersion MangaRelationRequestRelation = "alternate_version"
	MangaRelationRequestRelationBasedOn          MangaRelationRequestRelation = "based_on"
	MangaRelationRequestRelationColored          MangaRelationRequestRelation = "colored"
	MangaRelationRequestRelationDoujinshi        MangaRelationRequestRelation = "doujinshi"
	MangaRelationRequestRelationMainStory        MangaRelationRequestRelation = "main_story"
	MangaRelationRequestRelationMonochrome       MangaRelationRequestRelation = "monochrome"
	MangaRelationRequestRelationPrequel          MangaRelationRequestRelation = "prequel"
	MangaRelationRequestRelationPreserialization MangaRelationRequestRelation = "preserialization"
	MangaRelationRequestRelationSameFranchise    MangaRelationRequestRelation = "same_franchise"
	MangaRelationRequestRelationSequel           MangaRelationRequestRelation = "sequel"
	MangaRelationRequestRelationSerialization    MangaRelationRequestRelation = "serialization"
	MangaRelationRequestRelationSharedUniverse   MangaRelationRequestRelation = "shared_universe"
	MangaRelationRequestRelationSideStory        MangaRelationRequestRelation = "side_story"
	MangaRelationRequestRelationSpinOff          MangaRelationRequestRelation = "spin_off"
)

// Defines values for MangaRelationResponseResult.
const (
	MangaRelationResponseResultError MangaRelationResponseResult = "error"
	MangaRelationResponseResultOk    MangaRelationResponseResult = "ok"
)

// Defines values for MangaRequestContentRating.
const (
	MangaRequestContentRatingErotica      MangaRequestContentRating = "erotica"
	MangaRequestContentRatingPornographic MangaRequestContentRating = "pornographic"
	MangaRequestContentRatingSafe         MangaRequestContentRating = "safe"
	MangaRequestContentRatingSuggestive   MangaRequestContentRating = "suggestive"
)

// Defines values for MangaRequestPublicationDemographic.
const (
	MangaRequestPublicationDemographicJosei   MangaRequestPublicationDemographic = "josei"
	MangaRequestPublicationDemographicSeinen  MangaRequestPublicationDemographic = "seinen"
	MangaRequestPublicationDemographicShoujo  MangaRequestPublicationDemographic = "shoujo"
	MangaRequestPublicationDemographicShounen MangaRequestPublicationDemographic = "shounen"
)

// Defines values for MangaRequestStatus.
const (
	MangaRequestStatusCancelled MangaRequestStatus = "cancelled"
	MangaRequestStatusCompleted MangaRequestStatus = "completed"
	MangaRequestStatusHiatus    MangaRequestStatus = "hiatus"
	MangaRequestStatusOngoing   MangaRequestStatus = "ongoing"
)

// Defines values for MangaResponseResult.
const (
	MangaResponseResultError MangaResponseResult = "error"
	MangaResponseResultOk    MangaResponseResult = "ok"
)

// Defines values for MappingIdType.
const (
	MappingIdTypeMappingId MappingIdType = "mapping_id"
)

// Defines values for MappingIdAttributesType.
const (
	MappingIdAttributesTypeChapter MappingIdAttributesType = "chapter"
	MappingIdAttributesTypeGroup   MappingIdAttributesType = "group"
	MappingIdAttributesTypeManga   MappingIdAttributesType = "manga"
	MappingIdAttributesTypeTag     MappingIdAttributesType = "tag"
)

// Defines values for MappingIdBodyType.
const (
	MappingIdBodyTypeChapter MappingIdBodyType = "chapter"
	MappingIdBodyTypeGroup   MappingIdBodyType = "group"
	MappingIdBodyTypeManga   MappingIdBodyType = "manga"
	MappingIdBodyTypeTag     MappingIdBodyType = "tag"
)

// Defines values for RefreshResponseResult.
const (
	RefreshResponseResultError RefreshResponseResult = "error"
	RefreshResponseResultOk    RefreshResponseResult = "ok"
)

// Defines values for RelationshipRelated.
const (
	RelationshipRelatedAdaptedFrom      RelationshipRelated = "adapted_from"
	RelationshipRelatedAlternateStory   RelationshipRelated = "alternate_story"
	RelationshipRelatedAlternateVersion RelationshipRelated = "alternate_version"
	RelationshipRelatedBasedOn          RelationshipRelated = "based_on"
	RelationshipRelatedColored          RelationshipRelated = "colored"
	RelationshipRelatedDoujinshi        RelationshipRelated = "doujinshi"
	RelationshipRelatedMainStory        RelationshipRelated = "main_story"
	RelationshipRelatedMonochrome       RelationshipRelated = "monochrome"
	RelationshipRelatedPrequel          RelationshipRelated = "prequel"
	RelationshipRelatedPreserialization RelationshipRelated = "preserialization"
	RelationshipRelatedSameFranchise    RelationshipRelated = "same_franchise"
	RelationshipRelatedSequel           RelationshipRelated = "sequel"
	RelationshipRelatedSerialization    RelationshipRelated = "serialization"
	RelationshipRelatedSharedUniverse   RelationshipRelated = "shared_universe"
	RelationshipRelatedSideStory        RelationshipRelated = "side_story"
	RelationshipRelatedSpinOff          RelationshipRelated = "spin_off"
)

// Defines values for ReportType.
const (
	ReportTypeReport ReportType = "report"
)

// Defines values for ReportAttributesStatus.
const (
	ReportAttributesStatusAccepted     ReportAttributesStatus = "accepted"
	ReportAttributesStatusAutoresolved ReportAttributesStatus = "autoresolved"
	ReportAttributesStatusRefused      ReportAttributesStatus = "refused"
	ReportAttributesStatusWaiting      ReportAttributesStatus = "waiting"
)

// Defines values for ReportListResponseResult.
const (
	ReportListResponseResultError ReportListResponseResult = "error"
	ReportListResponseResultOk    ReportListResponseResult = "ok"
)

// Defines values for ResponseResult.
const (
	ResponseResultError ResponseResult = "error"
	ResponseResultOk    ResponseResult = "ok"
)

// Defines values for ScanlationGroupType.
const (
	ScanlationGroupTypeScanlationGroup ScanlationGroupType = "scanlation_group"
)

// Defines values for ScanlationGroupResponseResult.
const (
	ScanlationGroupResponseResultOk ScanlationGroupResponseResult = "ok"
)

// Defines values for TagType.
const (
	TagTypeTag TagType = "tag"
)

// Defines values for TagAttributesGroup.
const (
	Content TagAttributesGroup = "content"
	Format  TagAttributesGroup = "format"
	Genre   TagAttributesGroup = "genre"
	Theme   TagAttributesGroup = "theme"
)

// Defines values for UpdateMangaStatusStatus.
const (
	UpdateMangaStatusStatusCompleted  UpdateMangaStatusStatus = "completed"
	UpdateMangaStatusStatusDropped    UpdateMangaStatusStatus = "dropped"
	UpdateMangaStatusStatusOnHold     UpdateMangaStatusStatus = "on_hold"
	UpdateMangaStatusStatusPlanToRead UpdateMangaStatusStatus = "plan_to_read"
	UpdateMangaStatusStatusReReading  UpdateMangaStatusStatus = "re_reading"
	UpdateMangaStatusStatusReading    UpdateMangaStatusStatus = "reading"
)

// Defines values for UploadSessionType.
const (
	UploadSessionTypeUploadSession UploadSessionType = "upload_session"
)

// Defines values for UploadSessionFileType.
const (
	UploadSessionFileTypeUploadSessionFile UploadSessionFileType = "upload_session_file"
)

// Defines values for UploadSessionFileAttributesSource.
const (
	Local  UploadSessionFileAttributesSource = "local"
	Remote UploadSessionFileAttributesSource = "remote"
)

// Defines values for UserType.
const (
	UserTypeUser UserType = "user"
)

// Defines values for UserResponseResult.
const (
	Ok UserResponseResult = "ok"
)

// Defines values for GetAuthorParamsOrderName.
const (
	GetAuthorParamsOrderNameAsc  GetAuthorParamsOrderName = "asc"
	GetAuthorParamsOrderNameDesc GetAuthorParamsOrderName = "desc"
)

// Defines values for GetChapterParamsContentRating.
const (
	GetChapterParamsContentRatingErotica      GetChapterParamsContentRating = "erotica"
	GetChapterParamsContentRatingPornographic GetChapterParamsContentRating = "pornographic"
	GetChapterParamsContentRatingSafe         GetChapterParamsContentRating = "safe"
	GetChapterParamsContentRatingSuggestive   GetChapterParamsContentRating = "suggestive"
)

// Defines values for GetChapterParamsIncludeFutureUpdates.
const (
	GetChapterParamsIncludeFutureUpdatesN0 GetChapterParamsIncludeFutureUpdates = "0"
	GetChapterParamsIncludeFutureUpdatesN1 GetChapterParamsIncludeFutureUpdates = "1"
)

// Defines values for GetChapterParamsIncludeEmptyPages.
const (
	GetChapterParamsIncludeEmptyPagesN0 GetChapterParamsIncludeEmptyPages = 0
	GetChapterParamsIncludeEmptyPagesN1 GetChapterParamsIncludeEmptyPages = 1
)

// Defines values for GetChapterParamsIncludeFuturePublishAt.
const (
	GetChapterParamsIncludeFuturePublishAtN0 GetChapterParamsIncludeFuturePublishAt = 0
	GetChapterParamsIncludeFuturePublishAtN1 GetChapterParamsIncludeFuturePublishAt = 1
)

// Defines values for GetChapterParamsIncludeExternalUrl.
const (
	GetChapterParamsIncludeExternalUrlN0 GetChapterParamsIncludeExternalUrl = 0
	GetChapterParamsIncludeExternalUrlN1 GetChapterParamsIncludeExternalUrl = 1
)

// Defines values for GetChapterParamsIncludeUnavailable.
const (
	GetChapterParamsIncludeUnavailableN0 GetChapterParamsIncludeUnavailable = "0"
	GetChapterParamsIncludeUnavailableN1 GetChapterParamsIncludeUnavailable = "1"
)

// Defines values for GetChapterParamsOrderChapter.
const (
	GetChapterParamsOrderChapterAsc  GetChapterParamsOrderChapter = "asc"
	GetChapterParamsOrderChapterDesc GetChapterParamsOrderChapter = "desc"
)

// Defines values for GetChapterParamsOrderCreatedAt.
const (
	GetChapterParamsOrderCreatedAtAsc  GetChapterParamsOrderCreatedAt = "asc"
	GetChapterParamsOrderCreatedAtDesc GetChapterParamsOrderCreatedAt = "desc"
)

// Defines values for GetChapterParamsOrderPublishAt.
const (
	GetChapterParamsOrderPublishAtAsc  GetChapterParamsOrderPublishAt = "asc"
	GetChapterParamsOrderPublishAtDesc GetChapterParamsOrderPublishAt = "desc"
)

// Defines values for GetChapterParamsOrderReadableAt.
const (
	GetChapterParamsOrderReadableAtAsc  GetChapterParamsOrderReadableAt = "asc"
	GetChapterParamsOrderReadableAtDesc GetChapterParamsOrderReadableAt = "desc"
)

// Defines values for GetChapterParamsOrderUpdatedAt.
const (
	GetChapterParamsOrderUpdatedAtAsc  GetChapterParamsOrderUpdatedAt = "asc"
	GetChapterParamsOrderUpdatedAtDesc GetChapterParamsOrderUpdatedAt = "desc"
)

// Defines values for GetChapterParamsOrderVolume.
const (
	GetChapterParamsOrderVolumeAsc  GetChapterParamsOrderVolume = "asc"
	GetChapterParamsOrderVolumeDesc GetChapterParamsOrderVolume = "desc"
)

// Defines values for GetChapterParamsIncludes.
const (
	GetChapterParamsIncludesManga           GetChapterParamsIncludes = "manga"
	GetChapterParamsIncludesScanlationGroup GetChapterParamsIncludes = "scanlation_group"
	GetChapterParamsIncludesUser            GetChapterParamsIncludes = "user"
)

// Defines values for GetListApiclientsParamsState.
const (
	Approved     GetListApiclientsParamsState = "approved"
	Autoapproved GetListApiclientsParamsState = "autoapproved"
	Rejected     GetListApiclientsParamsState = "rejected"
	Requested    GetListApiclientsParamsState = "requested"
)

// Defines values for GetListApiclientsParamsOrderCreatedAt.
const (
	GetListApiclientsParamsOrderCreatedAtAsc  GetListApiclientsParamsOrderCreatedAt = "asc"
	GetListApiclientsParamsOrderCreatedAtDesc GetListApiclientsParamsOrderCreatedAt = "desc"
)

// Defines values for GetListApiclientsParamsOrderName.
const (
	GetListApiclientsParamsOrderNameAsc  GetListApiclientsParamsOrderName = "asc"
	GetListApiclientsParamsOrderNameDesc GetListApiclientsParamsOrderName = "desc"
)

// Defines values for GetListApiclientsParamsOrderUpdatedAt.
const (
	GetListApiclientsParamsOrderUpdatedAtAsc  GetListApiclientsParamsOrderUpdatedAt = "asc"
	GetListApiclientsParamsOrderUpdatedAtDesc GetListApiclientsParamsOrderUpdatedAt = "desc"
)

// Defines values for GetCoverParamsOrderCreatedAt.
const (
	GetCoverParamsOrderCreatedAtAsc  GetCoverParamsOrderCreatedAt = "asc"
	GetCoverParamsOrderCreatedAtDesc GetCoverParamsOrderCreatedAt = "desc"
)

// Defines values for GetCoverParamsOrderUpdatedAt.
const (
	GetCoverParamsOrderUpdatedAtAsc  GetCoverParamsOrderUpdatedAt = "asc"
	GetCoverParamsOrderUpdatedAtDesc GetCoverParamsOrderUpdatedAt = "desc"
)

// Defines values for GetCoverParamsOrderVolume.
const (
	GetCoverParamsOrderVolumeAsc  GetCoverParamsOrderVolume = "asc"
	GetCoverParamsOrderVolumeDesc GetCoverParamsOrderVolume = "desc"
)

// Defines values for ForumsThreadCreateJSONBodyType.
const (
	ForumsThreadCreateJSONBodyTypeChapter ForumsThreadCreateJSONBodyType = "chapter"
	ForumsThreadCreateJSONBodyTypeGroup   ForumsThreadCreateJSONBodyType = "group"
	ForumsThreadCreateJSONBodyTypeManga   ForumsThreadCreateJSONBodyType = "manga"
)

// Defines values for GetSearchGroupParamsOrderCreatedAt.
const (
	GetSearchGroupParamsOrderCreatedAtAsc  GetSearchGroupParamsOrderCreatedAt = "asc"
	GetSearchGroupParamsOrderCreatedAtDesc GetSearchGroupParamsOrderCreatedAt = "desc"
)

// Defines values for GetSearchGroupParamsOrderFollowedCount.
const (
	GetSearchGroupParamsOrderFollowedCountAsc  GetSearchGroupParamsOrderFollowedCount = "asc"
	GetSearchGroupParamsOrderFollowedCountDesc GetSearchGroupParamsOrderFollowedCount = "desc"
)

// Defines values for GetSearchGroupParamsOrderName.
const (
	GetSearchGroupParamsOrderNameAsc  GetSearchGroupParamsOrderName = "asc"
	GetSearchGroupParamsOrderNameDesc GetSearchGroupParamsOrderName = "desc"
)

// Defines values for GetSearchGroupParamsOrderRelevance.
const (
	GetSearchGroupParamsOrderRelevanceAsc  GetSearchGroupParamsOrderRelevance = "asc"
	GetSearchGroupParamsOrderRelevanceDesc GetSearchGroupParamsOrderRelevance = "desc"
)

// Defines values for GetSearchGroupParamsOrderUpdatedAt.
const (
	GetSearchGroupParamsOrderUpdatedAtAsc  GetSearchGroupParamsOrderUpdatedAt = "asc"
	GetSearchGroupParamsOrderUpdatedAtDesc GetSearchGroupParamsOrderUpdatedAt = "desc"
)

// Defines values for GetListIdFeedParamsContentRating.
const (
	GetListIdFeedParamsContentRatingErotica      GetListIdFeedParamsContentRating = "erotica"
	GetListIdFeedParamsContentRatingPornographic GetListIdFeedParamsContentRating = "pornographic"
	GetListIdFeedParamsContentRatingSafe         GetListIdFeedParamsContentRating = "safe"
	GetListIdFeedParamsContentRatingSuggestive   GetListIdFeedParamsContentRating = "suggestive"
)

// Defines values for GetListIdFeedParamsIncludeFutureUpdates.
const (
	GetListIdFeedParamsIncludeFutureUpdatesN0 GetListIdFeedParamsIncludeFutureUpdates = "0"
	GetListIdFeedParamsIncludeFutureUpdatesN1 GetListIdFeedParamsIncludeFutureUpdates = "1"
)

// Defines values for GetListIdFeedParamsOrderChapter.
const (
	GetListIdFeedParamsOrderChapterAsc  GetListIdFeedParamsOrderChapter = "asc"
	GetListIdFeedParamsOrderChapterDesc GetListIdFeedParamsOrderChapter = "desc"
)

// Defines values for GetListIdFeedParamsOrderCreatedAt.
const (
	GetListIdFeedParamsOrderCreatedAtAsc  GetListIdFeedParamsOrderCreatedAt = "asc"
	GetListIdFeedParamsOrderCreatedAtDesc GetListIdFeedParamsOrderCreatedAt = "desc"
)

// Defines values for GetListIdFeedParamsOrderPublishAt.
const (
	GetListIdFeedParamsOrderPublishAtAsc  GetListIdFeedParamsOrderPublishAt = "asc"
	GetListIdFeedParamsOrderPublishAtDesc GetListIdFeedParamsOrderPublishAt = "desc"
)

// Defines values for GetListIdFeedParamsOrderReadableAt.
const (
	GetListIdFeedParamsOrderReadableAtAsc  GetListIdFeedParamsOrderReadableAt = "asc"
	GetListIdFeedParamsOrderReadableAtDesc GetListIdFeedParamsOrderReadableAt = "desc"
)

// Defines values for GetListIdFeedParamsOrderUpdatedAt.
const (
	GetListIdFeedParamsOrderUpdatedAtAsc  GetListIdFeedParamsOrderUpdatedAt = "asc"
	GetListIdFeedParamsOrderUpdatedAtDesc GetListIdFeedParamsOrderUpdatedAt = "desc"
)

// Defines values for GetListIdFeedParamsOrderVolume.
const (
	GetListIdFeedParamsOrderVolumeAsc  GetListIdFeedParamsOrderVolume = "asc"
	GetListIdFeedParamsOrderVolumeDesc GetListIdFeedParamsOrderVolume = "desc"
)

// Defines values for GetListIdFeedParamsIncludeEmptyPages.
const (
	GetListIdFeedParamsIncludeEmptyPagesN0 GetListIdFeedParamsIncludeEmptyPages = 0
	GetListIdFeedParamsIncludeEmptyPagesN1 GetListIdFeedParamsIncludeEmptyPages = 1
)

// Defines values for GetListIdFeedParamsIncludeFuturePublishAt.
const (
	GetListIdFeedParamsIncludeFuturePublishAtN0 GetListIdFeedParamsIncludeFuturePublishAt = 0
	GetListIdFeedParamsIncludeFuturePublishAtN1 GetListIdFeedParamsIncludeFuturePublishAt = 1
)

// Defines values for GetListIdFeedParamsIncludeExternalUrl.
const (
	GetListIdFeedParamsIncludeExternalUrlN0 GetListIdFeedParamsIncludeExternalUrl = 0
	GetListIdFeedParamsIncludeExternalUrlN1 GetListIdFeedParamsIncludeExternalUrl = 1
)

// Defines values for GetListIdFeedParamsIncludeUnavailable.
const (
	GetListIdFeedParamsIncludeUnavailableN0 GetListIdFeedParamsIncludeUnavailable = "0"
	GetListIdFeedParamsIncludeUnavailableN1 GetListIdFeedParamsIncludeUnavailable = "1"
)

// Defines values for GetSearchMangaParamsYear1.
const (
	GetSearchMangaParamsYear1None GetSearchMangaParamsYear1 = "none"
)

// Defines values for GetSearchMangaParamsIncludedTagsMode.
const (
	GetSearchMangaParamsIncludedTagsModeAND GetSearchMangaParamsIncludedTagsMode = "AND"
	GetSearchMangaParamsIncludedTagsModeOR  GetSearchMangaParamsIncludedTagsMode = "OR"
)

// Defines values for GetSearchMangaParamsExcludedTagsMode.
const (
	GetSearchMangaParamsExcludedTagsModeAND GetSearchMangaParamsExcludedTagsMode = "AND"
	GetSearchMangaParamsExcludedTagsModeOR  GetSearchMangaParamsExcludedTagsMode = "OR"
)

// Defines values for GetSearchMangaParamsStatus.
const (
	GetSearchMangaParamsStatusCancelled GetSearchMangaParamsStatus = "cancelled"
	GetSearchMangaParamsStatusCompleted GetSearchMangaParamsStatus = "completed"
	GetSearchMangaParamsStatusHiatus    GetSearchMangaParamsStatus = "hiatus"
	GetSearchMangaParamsStatusOngoing   GetSearchMangaParamsStatus = "ongoing"
)

// Defines values for GetSearchMangaParamsPublicationDemographic.
const (
	GetSearchMangaParamsPublicationDemographicJosei   GetSearchMangaParamsPublicationDemographic = "josei"
	GetSearchMangaParamsPublicationDemographicNone    GetSearchMangaParamsPublicationDemographic = "none"
	GetSearchMangaParamsPublicationDemographicSeinen  GetSearchMangaParamsPublicationDemographic = "seinen"
	GetSearchMangaParamsPublicationDemographicShoujo  GetSearchMangaParamsPublicationDemographic = "shoujo"
	GetSearchMangaParamsPublicationDemographicShounen GetSearchMangaParamsPublicationDemographic = "shounen"
)

// Defines values for GetSearchMangaParamsContentRating.
const (
	GetSearchMangaParamsContentRatingErotica      GetSearchMangaParamsContentRating = "erotica"
	GetSearchMangaParamsContentRatingPornographic GetSearchMangaParamsContentRating = "pornographic"
	GetSearchMangaParamsContentRatingSafe         GetSearchMangaParamsContentRating = "safe"
	GetSearchMangaParamsContentRatingSuggestive   GetSearchMangaParamsContentRating = "suggestive"
)

// Defines values for GetSearchMangaParamsOrderCreatedAt.
const (
	GetSearchMangaParamsOrderCreatedAtAsc  GetSearchMangaParamsOrderCreatedAt = "asc"
	GetSearchMangaParamsOrderCreatedAtDesc GetSearchMangaParamsOrderCreatedAt = "desc"
)

// Defines values for GetSearchMangaParamsOrderFollowedCount.
const (
	GetSearchMangaParamsOrderFollowedCountAsc  GetSearchMangaParamsOrderFollowedCount = "asc"
	GetSearchMangaParamsOrderFollowedCountDesc GetSearchMangaParamsOrderFollowedCount = "desc"
)

// Defines values for GetSearchMangaParamsOrderLatestUploadedChapter.
const (
	GetSearchMangaParamsOrderLatestUploadedChapterAsc  GetSearchMangaParamsOrderLatestUploadedChapter = "asc"
	GetSearchMangaParamsOrderLatestUploadedChapterDesc GetSearchMangaParamsOrderLatestUploadedChapter = "desc"
)

// Defines values for GetSearchMangaParamsOrderRating.
const (
	GetSearchMangaParamsOrderRatingAsc  GetSearchMangaParamsOrderRating = "asc"
	GetSearchMangaParamsOrderRatingDesc GetSearchMangaParamsOrderRating = "desc"
)

// Defines values for GetSearchMangaParamsOrderRelevance.
const (
	GetSearchMangaParamsOrderRelevanceAsc  GetSearchMangaParamsOrderRelevance = "asc"
	GetSearchMangaParamsOrderRelevanceDesc GetSearchMangaParamsOrderRelevance = "desc"
)

// Defines values for GetSearchMangaParamsOrderTitle.
const (
	GetSearchMangaParamsOrderTitleAsc  GetSearchMangaParamsOrderTitle = "asc"
	GetSearchMangaParamsOrderTitleDesc GetSearchMangaParamsOrderTitle = "desc"
)

// Defines values for GetSearchMangaParamsOrderUpdatedAt.
const (
	GetSearchMangaParamsOrderUpdatedAtAsc  GetSearchMangaParamsOrderUpdatedAt = "asc"
	GetSearchMangaParamsOrderUpdatedAtDesc GetSearchMangaParamsOrderUpdatedAt = "desc"
)

// Defines values for GetSearchMangaParamsOrderYear.
const (
	GetSearchMangaParamsOrderYearAsc  GetSearchMangaParamsOrderYear = "asc"
	GetSearchMangaParamsOrderYearDesc GetSearchMangaParamsOrderYear = "desc"
)

// Defines values for GetSearchMangaParamsHasAvailableChapters.
const (
	GetSearchMangaParamsHasAvailableChaptersFalse GetSearchMangaParamsHasAvailableChapters = "false"
	GetSearchMangaParamsHasAvailableChaptersN0    GetSearchMangaParamsHasAvailableChapters = "0"
	GetSearchMangaParamsHasAvailableChaptersN1    GetSearchMangaParamsHasAvailableChapters = "1"
	GetSearchMangaParamsHasAvailableChaptersTrue  GetSearchMangaParamsHasAvailableChapters = "true"
)

// Defines values for GetSearchMangaParamsHasUnavailableChapters.
const (
	GetSearchMangaParamsHasUnavailableChaptersN0 GetSearchMangaParamsHasUnavailableChapters = "0"
	GetSearchMangaParamsHasUnavailableChaptersN1 GetSearchMangaParamsHasUnavailableChapters = "1"
)

// Defines values for OrderCreatedAt.
const (
	OrderCreatedAtAsc  OrderCreatedAt = "asc"
	OrderCreatedAtDesc OrderCreatedAt = "desc"
)

// Defines values for OrderTitle.
const (
	OrderTitleAsc  OrderTitle = "asc"
	OrderTitleDesc OrderTitle = "desc"
)

// Defines values for OrderUpdatedAt.
const (
	OrderUpdatedAtAsc  OrderUpdatedAt = "asc"
	OrderUpdatedAtDesc OrderUpdatedAt = "desc"
)

// Defines values for OrderYear.
const (
	OrderYearAsc  OrderYear = "asc"
	OrderYearDesc OrderYear = "desc"
)

// Defines values for GetMangaRandomParamsContentRating.
const (
	GetMangaRandomParamsContentRatingErotica      GetMangaRandomParamsContentRating = "erotica"
	GetMangaRandomParamsContentRatingPornographic GetMangaRandomParamsContentRating = "pornographic"
	GetMangaRandomParamsContentRatingSafe         GetMangaRandomParamsContentRating = "safe"
	GetMangaRandomParamsContentRatingSuggestive   GetMangaRandomParamsContentRating = "suggestive"
)

// Defines values for GetMangaRandomParamsIncludedTagsMode.
const (
	GetMangaRandomParamsIncludedTagsModeAND GetMangaRandomParamsIncludedTagsMode = "AND"
	GetMangaRandomParamsIncludedTagsModeOR  GetMangaRandomParamsIncludedTagsMode = "OR"
)

// Defines values for GetMangaRandomParamsExcludedTagsMode.
const (
	GetMangaRandomParamsExcludedTagsModeAND GetMangaRandomParamsExcludedTagsMode = "AND"
	GetMangaRandomParamsExcludedTagsModeOR  GetMangaRandomParamsExcludedTagsMode = "OR"
)

// Defines values for GetMangaStatusParamsStatus.
const (
	GetMangaStatusParamsStatusCompleted  GetMangaStatusParamsStatus = "completed"
	GetMangaStatusParamsStatusDropped    GetMangaStatusParamsStatus = "dropped"
	GetMangaStatusParamsStatusOnHold     GetMangaStatusParamsStatus = "on_hold"
	GetMangaStatusParamsStatusPlanToRead GetMangaStatusParamsStatus = "plan_to_read"
	GetMangaStatusParamsStatusReReading  GetMangaStatusParamsStatus = "re_reading"
	GetMangaStatusParamsStatusReading    GetMangaStatusParamsStatus = "reading"
)

// Defines values for PutMangaIdJSONBodyContentRating.
const (
	PutMangaIdJSONBodyContentRatingErotica      PutMangaIdJSONBodyContentRating = "erotica"
	PutMangaIdJSONBodyContentRatingPornographic PutMangaIdJSONBodyContentRating = "pornographic"
	PutMangaIdJSONBodyContentRatingSafe         PutMangaIdJSONBodyContentRating = "safe"
	PutMangaIdJSONBodyContentRatingSuggestive   PutMangaIdJSONBodyContentRating = "suggestive"
)

// Defines values for PutMangaIdJSONBodyPublicationDemographic.
const (
	Josei   PutMangaIdJSONBodyPublicationDemographic = "josei"
	Seinen  PutMangaIdJSONBodyPublicationDemographic = "seinen"
	Shoujo  PutMangaIdJSONBodyPublicationDemographic = "shoujo"
	Shounen PutMangaIdJSONBodyPublicationDemographic = "shounen"
)

// Defines values for PutMangaIdJSONBodyStatus.
const (
	PutMangaIdJSONBodyStatusCancelled PutMangaIdJSONBodyStatus = "cancelled"
	PutMangaIdJSONBodyStatusCompleted PutMangaIdJSONBodyStatus = "completed"
	PutMangaIdJSONBodyStatusHiatus    PutMangaIdJSONBodyStatus = "hiatus"
	PutMangaIdJSONBodyStatusOngoing   PutMangaIdJSONBodyStatus = "ongoing"
)

// Defines values for GetMangaIdFeedParamsContentRating.
const (
	GetMangaIdFeedParamsContentRatingErotica      GetMangaIdFeedParamsContentRating = "erotica"
	GetMangaIdFeedParamsContentRatingPornographic GetMangaIdFeedParamsContentRating = "pornographic"
	GetMangaIdFeedParamsContentRatingSafe         GetMangaIdFeedParamsContentRating = "safe"
	GetMangaIdFeedParamsContentRatingSuggestive   GetMangaIdFeedParamsContentRating = "suggestive"
)

// Defines values for GetMangaIdFeedParamsIncludeFutureUpdates.
const (
	GetMangaIdFeedParamsIncludeFutureUpdatesN0 GetMangaIdFeedParamsIncludeFutureUpdates = "0"
	GetMangaIdFeedParamsIncludeFutureUpdatesN1 GetMangaIdFeedParamsIncludeFutureUpdates = "1"
)

// Defines values for GetMangaIdFeedParamsOrderChapter.
const (
	GetMangaIdFeedParamsOrderChapterAsc  GetMangaIdFeedParamsOrderChapter = "asc"
	GetMangaIdFeedParamsOrderChapterDesc GetMangaIdFeedParamsOrderChapter = "desc"
)

// Defines values for GetMangaIdFeedParamsOrderCreatedAt.
const (
	GetMangaIdFeedParamsOrderCreatedAtAsc  GetMangaIdFeedParamsOrderCreatedAt = "asc"
	GetMangaIdFeedParamsOrderCreatedAtDesc GetMangaIdFeedParamsOrderCreatedAt = "desc"
)

// Defines values for GetMangaIdFeedParamsOrderPublishAt.
const (
	GetMangaIdFeedParamsOrderPublishAtAsc  GetMangaIdFeedParamsOrderPublishAt = "asc"
	GetMangaIdFeedParamsOrderPublishAtDesc GetMangaIdFeedParamsOrderPublishAt = "desc"
)

// Defines values for GetMangaIdFeedParamsOrderReadableAt.
const (
	GetMangaIdFeedParamsOrderReadableAtAsc  GetMangaIdFeedParamsOrderReadableAt = "asc"
	GetMangaIdFeedParamsOrderReadableAtDesc GetMangaIdFeedParamsOrderReadableAt = "desc"
)

// Defines values for GetMangaIdFeedParamsOrderUpdatedAt.
const (
	GetMangaIdFeedParamsOrderUpdatedAtAsc  GetMangaIdFeedParamsOrderUpdatedAt = "asc"
	GetMangaIdFeedParamsOrderUpdatedAtDesc GetMangaIdFeedParamsOrderUpdatedAt = "desc"
)

// Defines values for GetMangaIdFeedParamsOrderVolume.
const (
	GetMangaIdFeedParamsOrderVolumeAsc  GetMangaIdFeedParamsOrderVolume = "asc"
	GetMangaIdFeedParamsOrderVolumeDesc GetMangaIdFeedParamsOrderVolume = "desc"
)

// Defines values for GetMangaIdFeedParamsIncludeEmptyPages.
const (
	GetMangaIdFeedParamsIncludeEmptyPagesN0 GetMangaIdFeedParamsIncludeEmptyPages = 0
	GetMangaIdFeedParamsIncludeEmptyPagesN1 GetMangaIdFeedParamsIncludeEmptyPages = 1
)

// Defines values for GetMangaIdFeedParamsIncludeFuturePublishAt.
const (
	GetMangaIdFeedParamsIncludeFuturePublishAtN0 GetMangaIdFeedParamsIncludeFuturePublishAt = 0
	GetMangaIdFeedParamsIncludeFuturePublishAtN1 GetMangaIdFeedParamsIncludeFuturePublishAt = 1
)

// Defines values for GetMangaIdFeedParamsIncludeExternalUrl.
const (
	GetMangaIdFeedParamsIncludeExternalUrlN0 GetMangaIdFeedParamsIncludeExternalUrl = 0
	GetMangaIdFeedParamsIncludeExternalUrlN1 GetMangaIdFeedParamsIncludeExternalUrl = 1
)

// Defines values for GetMangaIdFeedParamsIncludeUnavailable.
const (
	GetMangaIdFeedParamsIncludeUnavailableN0 GetMangaIdFeedParamsIncludeUnavailable = "0"
	GetMangaIdFeedParamsIncludeUnavailableN1 GetMangaIdFeedParamsIncludeUnavailable = "1"
)

// Defines values for GetReportsParamsCategory.
const (
	GetReportsParamsCategoryAuthor          GetReportsParamsCategory = "author"
	GetReportsParamsCategoryChapter         GetReportsParamsCategory = "chapter"
	GetReportsParamsCategoryManga           GetReportsParamsCategory = "manga"
	GetReportsParamsCategoryScanlationGroup GetReportsParamsCategory = "scanlation_group"
	GetReportsParamsCategoryUser            GetReportsParamsCategory = "user"
)

// Defines values for GetReportsParamsStatus.
const (
	GetReportsParamsStatusAccepted     GetReportsParamsStatus = "accepted"
	GetReportsParamsStatusAutoresolved GetReportsParamsStatus = "autoresolved"
	GetReportsParamsStatusRefused      GetReportsParamsStatus = "refused"
	GetReportsParamsStatusWaiting      GetReportsParamsStatus = "waiting"
)

// Defines values for GetReportsParamsOrderCreatedAt.
const (
	GetReportsParamsOrderCreatedAtAsc  GetReportsParamsOrderCreatedAt = "asc"
	GetReportsParamsOrderCreatedAtDesc GetReportsParamsOrderCreatedAt = "desc"
)

// Defines values for PostReportJSONBodyCategory.
const (
	PostReportJSONBodyCategoryAuthor          PostReportJSONBodyCategory = "author"
	PostReportJSONBodyCategoryChapter         PostReportJSONBodyCategory = "chapter"
	PostReportJSONBodyCategoryManga           PostReportJSONBodyCategory = "manga"
	PostReportJSONBodyCategoryScanlationGroup PostReportJSONBodyCategory = "scanlation_group"
	PostReportJSONBodyCategoryUser            PostReportJSONBodyCategory = "user"
)

// Defines values for GetUserParamsOrderUsername.
const (
	GetUserParamsOrderUsernameAsc  GetUserParamsOrderUsername = "asc"
	GetUserParamsOrderUsernameDesc GetUserParamsOrderUsername = "desc"
)

// Defines values for GetUserFollowsMangaFeedParamsContentRating.
const (
	Erotica      GetUserFollowsMangaFeedParamsContentRating = "erotica"
	Pornographic GetUserFollowsMangaFeedParamsContentRating = "pornographic"
	Safe         GetUserFollowsMangaFeedParamsContentRating = "safe"
	Suggestive   GetUserFollowsMangaFeedParamsContentRating = "suggestive"
)

// Defines values for GetUserFollowsMangaFeedParamsIncludeFutureUpdates.
const (
	GetUserFollowsMangaFeedParamsIncludeFutureUpdatesN0 GetUserFollowsMangaFeedParamsIncludeFutureUpdates = "0"
	GetUserFollowsMangaFeedParamsIncludeFutureUpdatesN1 GetUserFollowsMangaFeedParamsIncludeFutureUpdates = "1"
)

// Defines values for GetUserFollowsMangaFeedParamsOrderChapter.
const (
	GetUserFollowsMangaFeedParamsOrderChapterAsc  GetUserFollowsMangaFeedParamsOrderChapter = "asc"
	GetUserFollowsMangaFeedParamsOrderChapterDesc GetUserFollowsMangaFeedParamsOrderChapter = "desc"
)

// Defines values for GetUserFollowsMangaFeedParamsOrderCreatedAt.
const (
	GetUserFollowsMangaFeedParamsOrderCreatedAtAsc  GetUserFollowsMangaFeedParamsOrderCreatedAt = "asc"
	GetUserFollowsMangaFeedParamsOrderCreatedAtDesc GetUserFollowsMangaFeedParamsOrderCreatedAt = "desc"
)

// Defines values for GetUserFollowsMangaFeedParamsOrderPublishAt.
const (
	GetUserFollowsMangaFeedParamsOrderPublishAtAsc  GetUserFollowsMangaFeedParamsOrderPublishAt = "asc"
	GetUserFollowsMangaFeedParamsOrderPublishAtDesc GetUserFollowsMangaFeedParamsOrderPublishAt = "desc"
)

// Defines values for GetUserFollowsMangaFeedParamsOrderReadableAt.
const (
	GetUserFollowsMangaFeedParamsOrderReadableAtAsc  GetUserFollowsMangaFeedParamsOrderReadableAt = "asc"
	GetUserFollowsMangaFeedParamsOrderReadableAtDesc GetUserFollowsMangaFeedParamsOrderReadableAt = "desc"
)

// Defines values for GetUserFollowsMangaFeedParamsOrderUpdatedAt.
const (
	GetUserFollowsMangaFeedParamsOrderUpdatedAtAsc  GetUserFollowsMangaFeedParamsOrderUpdatedAt = "asc"
	GetUserFollowsMangaFeedParamsOrderUpdatedAtDesc GetUserFollowsMangaFeedParamsOrderUpdatedAt = "desc"
)

// Defines values for GetUserFollowsMangaFeedParamsOrderVolume.
const (
	GetUserFollowsMangaFeedParamsOrderVolumeAsc  GetUserFollowsMangaFeedParamsOrderVolume = "asc"
	GetUserFollowsMangaFeedParamsOrderVolumeDesc GetUserFollowsMangaFeedParamsOrderVolume = "desc"
)

// Defines values for GetUserFollowsMangaFeedParamsIncludeEmptyPages.
const (
	GetUserFollowsMangaFeedParamsIncludeEmptyPagesN0 GetUserFollowsMangaFeedParamsIncludeEmptyPages = 0
	GetUserFollowsMangaFeedParamsIncludeEmptyPagesN1 GetUserFollowsMangaFeedParamsIncludeEmptyPages = 1
)

// Defines values for GetUserFollowsMangaFeedParamsIncludeFuturePublishAt.
const (
	GetUserFollowsMangaFeedParamsIncludeFuturePublishAtN0 GetUserFollowsMangaFeedParamsIncludeFuturePublishAt = 0
	GetUserFollowsMangaFeedParamsIncludeFuturePublishAtN1 GetUserFollowsMangaFeedParamsIncludeFuturePublishAt = 1
)

// Defines values for GetUserFollowsMangaFeedParamsIncludeExternalUrl.
const (
	GetUserFollowsMangaFeedParamsIncludeExternalUrlN0 GetUserFollowsMangaFeedParamsIncludeExternalUrl = 0
	GetUserFollowsMangaFeedParamsIncludeExternalUrlN1 GetUserFollowsMangaFeedParamsIncludeExternalUrl = 1
)

// Defines values for GetUserFollowsMangaFeedParamsIncludeUnavailable.
const (
	GetUserFollowsMangaFeedParamsIncludeUnavailableN0 GetUserFollowsMangaFeedParamsIncludeUnavailable = "0"
	GetUserFollowsMangaFeedParamsIncludeUnavailableN1 GetUserFollowsMangaFeedParamsIncludeUnavailable = "1"
)

// ApiClient defines model for ApiClient.
type ApiClient struct {
	Attributes    *ApiClientAttributes `json:"attributes,omitempty"`
	Id            *openapi_types.UUID  `json:"id,omitempty"`
	Relationships *[]Relationship      `json:"relationships,omitempty"`
	Type          *ApiClientType       `json:"type,omitempty"`
}

// ApiClientType defines model for ApiClient.Type.
type ApiClientType string

// ApiClientAttributes defines model for ApiClientAttributes.
type ApiClientAttributes struct {
	CreatedAt        *string                   `json:"createdAt,omitempty"`
	Description      *string                   `json:"description"`
	ExternalClientId *string                   `json:"externalClientId"`
	IsActive         *bool                     `json:"isActive,omitempty"`
	Name             *string                   `json:"name,omitempty"`
	Profile          *string                   `json:"profile,omitempty"`
	State            *ApiClientAttributesState `json:"state,omitempty"`
	UpdatedAt        *string                   `json:"updatedAt,omitempty"`
	Version          *int                      `json:"version,omitempty"`
}

// ApiClientAttributesState defines model for ApiClientAttributes.State.
type ApiClientAttributesState string

// ApiClientCreate defines model for ApiClientCreate.
type ApiClientCreate struct {
	Description *string                `json:"description"`
	Name        string                 `json:"name"`
	Profile     ApiClientCreateProfile `json:"profile"`
	Version     *int                   `json:"version,omitempty"`
}

// ApiClientCreateProfile defines model for ApiClientCreate.Profile.
type ApiClientCreateProfile string

// ApiClientEdit defines model for ApiClientEdit.
type ApiClientEdit struct {
	Description *string `json:"description"`
	Version     int     `json:"version"`
}

// ApiClientList defines model for ApiClientList.
type ApiClientList struct {
	Data     *[]ApiClient `json:"data,omitempty"`
	Limit    *int         `json:"limit,omitempty"`
	Offset   *int         `json:"offset,omitempty"`
	Response *string      `json:"response,omitempty"`
	Result   *string      `json:"result,omitempty"`
	Total    *int         `json:"total,omitempty"`
}

// ApiClientResponse defines model for ApiClientResponse.
type ApiClientResponse struct {
	Data     *ApiClient `json:"data,omitempty"`
	Response *string    `json:"response,omitempty"`
	Result   *string    `json:"result,omitempty"`
}

// Author defines model for Author.
type Author struct {
	Attributes    *AuthorAttributes   `json:"attributes,omitempty"`
	Id            *openapi_types.UUID `json:"id,omitempty"`
	Relationships *[]Relationship     `json:"relationships,omitempty"`
	Type          *AuthorType         `json:"type,omitempty"`
}

// AuthorType defines model for Author.Type.
type AuthorType string

// AuthorAttributes defines model for AuthorAttributes.
type AuthorAttributes struct {
	Biography *LocalizedString `json:"biography,omitempty"`
	Booth     *string          `json:"booth"`
	CreatedAt *string          `json:"createdAt,omitempty"`
	FanBox    *string          `json:"fanBox"`
	Fantia    *string          `json:"fantia"`
	ImageUrl  *string          `json:"imageUrl"`
	MelonBook *string          `json:"melonBook"`
	Name      *string          `json:"name,omitempty"`
	Namicomi  *string          `json:"namicomi"`
	Naver     *string          `json:"naver"`
	NicoVideo *string          `json:"nicoVideo"`
	Pixiv     *string          `json:"pixiv"`
	Skeb      *string          `json:"skeb"`
	Tumblr    *string          `json:"tumblr"`
	Twitter   *string          `json:"twitter"`
	UpdatedAt *string          `json:"updatedAt,omitempty"`
	Version   *int             `json:"version,omitempty"`
	Website   *string          `json:"website"`
	Weibo     *string          `json:"weibo"`
	Youtube   *string          `json:"youtube"`
}

// AuthorCreate defines model for AuthorCreate.
type AuthorCreate struct {
	Biography *LocalizedString `json:"biography,omitempty"`
	Booth     *string          `json:"booth"`
	FanBox    *string          `json:"fanBox"`
	Fantia    *string          `json:"fantia"`
	MelonBook *string          `json:"melonBook"`
	Name      string           `json:"name"`
	Naver     *string          `json:"naver"`
	NicoVideo *string          `json:"nicoVideo"`
	Pixiv     *string          `json:"pixiv"`
	Skeb      *string          `json:"skeb"`
	Tumblr    *string          `json:"tumblr"`
	Twitter   *string          `json:"twitter"`
	Website   *string          `json:"website"`
	Weibo     *string          `json:"weibo"`
	Youtube   *string          `json:"youtube"`
}

// AuthorEdit defines model for AuthorEdit.
type AuthorEdit struct {
	Biography *LocalizedString `json:"biography,omitempty"`
	Booth     *string          `json:"booth"`
	FanBox    *string          `json:"fanBox"`
	Fantia    *string          `json:"fantia"`
	MelonBook *string          `json:"melonBook"`
	Name      *string          `json:"name,omitempty"`
	Naver     *string          `json:"naver"`
	NicoVideo *string          `json:"nicoVideo"`
	Pixiv     *string          `json:"pixiv"`
	Skeb      *string          `json:"skeb"`
	Tumblr    *string          `json:"tumblr"`
	Twitter   *string          `json:"twitter"`
	Version   int              `json:"version"`
	Website   *string          `json:"website"`
	Weibo     *string          `json:"weibo"`
	Youtube   *string          `json:"youtube"`
}

// AuthorList defines model for AuthorList.
type AuthorList struct {
	Data     *[]Author `json:"data,omitempty"`
	Limit    *int      `json:"limit,omitempty"`
	Offset   *int      `json:"offset,omitempty"`
	Response *string   `json:"response,omitempty"`
	Result   *string   `json:"result,omitempty"`
	Total    *int      `json:"total,omitempty"`
}

// AuthorResponse defines model for AuthorResponse.
type AuthorResponse struct {
	Data     *Author `json:"data,omitempty"`
	Response *string `json:"response,omitempty"`
	Result   *string `json:"result,omitempty"`
}

// BeginEditSession defines model for BeginEditSession.
type BeginEditSession struct {
	Version int `json:"version"`
}

// BeginUploadSession defines model for BeginUploadSession.
type BeginUploadSession struct {
	Groups []openapi_types.UUID `json:"groups"`
	Manga  openapi_types.UUID   `json:"manga"`
}

// Chapter defines model for Chapter.
type Chapter struct {
	Attributes    *ChapterAttributes  `json:"attributes,omitempty"`
	Id            *openapi_types.UUID `json:"id,omitempty"`
	Relationships *[]Relationship     `json:"relationships,omitempty"`
	Type          *ChapterType        `json:"type,omitempty"`
}

// ChapterType defines model for Chapter.Type.
type ChapterType string

// ChapterAttributes defines model for ChapterAttributes.
type ChapterAttributes struct {
	Chapter   *string `json:"chapter"`
	CreatedAt *string `json:"createdAt,omitempty"`

	// ExternalUrl Denotes a chapter that links to an external source.
	ExternalUrl   *string `json:"externalUrl"`
	IsUnavailable *bool   `json:"isUnavailable,omitempty"`

	// Pages Count of readable images for this chapter
	Pages              *int                `json:"pages,omitempty"`
	PublishAt          *string             `json:"publishAt,omitempty"`
	ReadableAt         *string             `json:"readableAt,omitempty"`
	Title              *string             `json:"title"`
	TranslatedLanguage *string             `json:"translatedLanguage,omitempty"`
	UpdatedAt          *string             `json:"updatedAt,omitempty"`
	Uploader           *openapi_types.UUID `json:"uploader,omitempty"`
	Version            *int                `json:"version,omitempty"`
	Volume             *string             `json:"volume"`
}

// ChapterDraft defines model for ChapterDraft.
type ChapterDraft struct {
	Chapter            *ChapterVolume `json:"chapter"`
	ExternalUrl        *string        `json:"externalUrl"`
	PublishAt          *string        `json:"publishAt,omitempty"`
	Title              *string        `json:"title"`
	TranslatedLanguage string         `json:"translatedLanguage"`
	Volume             *ChapterVolume `json:"volume"`
}

// ChapterEdit defines model for ChapterEdit.
type ChapterEdit struct {
	Chapter            *ChapterVolume        `json:"chapter"`
	Groups             *[]openapi_types.UUID `json:"groups,omitempty"`
	Title              *string               `json:"title"`
	TranslatedLanguage *string               `json:"translatedLanguage,omitempty"`
	Version            int                   `json:"version"`
	Volume             *ChapterVolume        `json:"volume"`
}

// ChapterList defines model for ChapterList.
type ChapterList struct {
	Data     *[]Chapter `json:"data,omitempty"`
	Limit    *int       `json:"limit,omitempty"`
	Offset   *int       `json:"offset,omitempty"`
	Response *string    `json:"response,omitempty"`
	Result   *string    `json:"result,omitempty"`
	Total    *int       `json:"total,omitempty"`
}

// ChapterReadMarkerBatch defines model for ChapterReadMarkerBatch.
type ChapterReadMarkerBatch struct {
	ChapterIdsRead   *[]openapi_types.UUID `json:"chapterIdsRead,omitempty"`
	ChapterIdsUnread *[]openapi_types.UUID `json:"chapterIdsUnread,omitempty"`
	union            json.RawMessage
}

// ChapterReadMarkerBatch0 defines model for .
type ChapterReadMarkerBatch0 = interface{}

// ChapterReadMarkerBatch1 defines model for .
type ChapterReadMarkerBatch1 = interface{}

// ChapterRequest defines model for ChapterRequest.
type ChapterRequest struct {
	Chapter            *ChapterVolume        `json:"chapter"`
	Groups             *[]openapi_types.UUID `json:"groups,omitempty"`
	Title              *string               `json:"title"`
	TranslatedLanguage *string               `json:"translatedLanguage,omitempty"`
	Version            *int                  `json:"version,omitempty"`
	Volume             *ChapterVolume        `json:"volume"`
}

// ChapterResponse defines model for ChapterResponse.
type ChapterResponse struct {
	Data     *Chapter               `json:"data,omitempty"`
	Response *string                `json:"response,omitempty"`
	Result   *ChapterResponseResult `json:"result,omitempty"`
}

// ChapterResponseResult defines model for ChapterResponse.Result.
type ChapterResponseResult string

// ChapterVolume defines model for ChapterVolume.
type ChapterVolume = string

// CheckResponse defines model for CheckResponse.
type CheckResponse struct {
	IsAuthenticated *bool     `json:"isAuthenticated,omitempty"`
	Permissions     *[]string `json:"permissions,omitempty"`
	Result          *string   `json:"result,omitempty"`
	Roles           *[]string `json:"roles,omitempty"`
}

// CommitUploadSession defines model for CommitUploadSession.
type CommitUploadSession struct {
	ChapterDraft *ChapterDraft `json:"chapterDraft,omitempty"`

	// PageOrder ordered list of Upload Session File ids
	PageOrder *[]openapi_types.UUID `json:"pageOrder,omitempty"`
}

// Cover defines model for Cover.
type Cover struct {
	Attributes    *CoverAttributes    `json:"attributes,omitempty"`
	Id            *openapi_types.UUID `json:"id,omitempty"`
	Relationships *[]Relationship     `json:"relationships,omitempty"`
	Type          *CoverType          `json:"type,omitempty"`
}

// CoverType defines model for Cover.Type.
type CoverType string

// CoverAttributes defines model for CoverAttributes.
type CoverAttributes struct {
	CreatedAt   *string `json:"createdAt,omitempty"`
	Description *string `json:"description"`
	FileName    *string `json:"fileName,omitempty"`
	Locale      *string `json:"locale"`
	UpdatedAt   *string `json:"updatedAt,omitempty"`
	Version     *int    `json:"version,omitempty"`
	Volume      *string `json:"volume"`
}

// CoverEdit defines model for CoverEdit.
type CoverEdit struct {
	Description *string      `json:"description"`
	Locale      *string      `json:"locale"`
	Version     int          `json:"version"`
	Volume      *CoverVolume `json:"volume"`
}

// CoverList defines model for CoverList.
type CoverList struct {
	Data     *[]Cover `json:"data,omitempty"`
	Limit    *int     `json:"limit,omitempty"`
	Offset   *int     `json:"offset,omitempty"`
	Response *string  `json:"response,omitempty"`
	Result   *string  `json:"result,omitempty"`
	Total    *int     `json:"total,omitempty"`
}

// CoverResponse defines model for CoverResponse.
type CoverResponse struct {
	Data     *Cover  `json:"data,omitempty"`
	Response *string `json:"response,omitempty"`
	Result   *string `json:"result,omitempty"`
}

// CoverVolume defines model for CoverVolume.
type CoverVolume = string

// CreateScanlationGroup defines model for CreateScanlationGroup.
type CreateScanlationGroup struct {
	ContactEmail *string `json:"contactEmail"`
	Description  *string `json:"description"`
	Discord      *string `json:"discord"`
	Inactive     *bool   `json:"inactive,omitempty"`
	IrcChannel   *string `json:"ircChannel"`
	IrcServer    *string `json:"ircServer"`
	MangaUpdates *string `json:"mangaUpdates"`
	Name         string  `json:"name"`
	PublishDelay *string `json:"publishDelay"`
	Twitter      *string `json:"twitter"`
	Website      *string `json:"website"`
}

// CustomList defines model for CustomList.
type CustomList struct {
	Attributes    *CustomListAttributes `json:"attributes,omitempty"`
	Id            *openapi_types.UUID   `json:"id,omitempty"`
	Relationships *[]Relationship       `json:"relationships,omitempty"`
	Type          *CustomListType       `json:"type,omitempty"`
}

// CustomListType defines model for CustomList.Type.
type CustomListType string

// CustomListAttributes defines model for CustomListAttributes.
type CustomListAttributes struct {
	Name       *string                         `json:"name,omitempty"`
	Version    *int                            `json:"version,omitempty"`
	Visibility *CustomListAttributesVisibility `json:"visibility,omitempty"`
}

// CustomListAttributesVisibility defines model for CustomListAttributes.Visibility.
type CustomListAttributesVisibility string

// CustomListCreate defines model for CustomListCreate.
type CustomListCreate struct {
	Manga      *[]openapi_types.UUID       `json:"manga,omitempty"`
	Name       string                      `json:"name"`
	Version    *int                        `json:"version,omitempty"`
	Visibility *CustomListCreateVisibility `json:"visibility,omitempty"`
}

// CustomListCreateVisibility defines model for CustomListCreate.Visibility.
type CustomListCreateVisibility string

// CustomListEdit defines model for CustomListEdit.
type CustomListEdit struct {
	Manga      *[]openapi_types.UUID     `json:"manga,omitempty"`
	Name       *string                   `json:"name,omitempty"`
	Version    int                       `json:"version"`
	Visibility *CustomListEditVisibility `json:"visibility,omitempty"`
}

// CustomListEditVisibility defines model for CustomListEdit.Visibility.
type CustomListEditVisibility string

// CustomListList defines model for CustomListList.
type CustomListList struct {
	Data     *[]CustomList `json:"data,omitempty"`
	Limit    *int          `json:"limit,omitempty"`
	Offset   *int          `json:"offset,omitempty"`
	Response *string       `json:"response,omitempty"`
	Result   *string       `json:"result,omitempty"`
	Total    *int          `json:"total,omitempty"`
}

// CustomListResponse defines model for CustomListResponse.
type CustomListResponse struct {
	Data     *CustomList               `json:"data,omitempty"`
	Response *string                   `json:"response,omitempty"`
	Result   *CustomListResponseResult `json:"result,omitempty"`
}

// CustomListResponseResult defines model for CustomListResponse.Result.
type CustomListResponseResult string

// Error defines model for Error.
type Error struct {
	Context *string `json:"context"`
	Detail  *string `json:"detail"`
	Id      *string `json:"id,omitempty"`
	Status  *int    `json:"status,omitempty"`
	Title   *string `json:"title,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	Errors *[]Error `json:"errors,omitempty"`
	Result *string  `json:"result,omitempty"`
}

// ForumsThreadResponse defines model for ForumsThreadResponse.
type ForumsThreadResponse struct {
	Data *struct {
		Attributes *struct {
			// RepliesCount The number of replies so far in the forums thread returned
			RepliesCount *int `json:"repliesCount,omitempty"`
		} `json:"attributes,omitempty"`

		// Id The id for the thread on the forums, accessible at `https://forums.mangadex.org/threads/:id`
		Id   *int    `json:"id,omitempty"`
		Type *string `json:"type,omitempty"`
	} `json:"data,omitempty"`
	Response *string `json:"response,omitempty"`
	Result   *string `json:"result,omitempty"`
}

// LocalizedString defines model for LocalizedString.
type LocalizedString map[string]string

// Login defines model for Login.
type Login struct {
	Email    *string `json:"email,omitempty"`
	Password string  `json:"password"`
	Username *string `json:"username,omitempty"`
}

// LoginResponse defines model for LoginResponse.
type LoginResponse struct {
	Result *LoginResponseResult `json:"result,omitempty"`
	Token  *struct {
		Refresh *string `json:"refresh,omitempty"`
		Session *string `json:"session,omitempty"`
	} `json:"token,omitempty"`
}

// LoginResponseResult defines model for LoginResponse.Result.
type LoginResponseResult string

// LogoutResponse defines model for LogoutResponse.
type LogoutResponse struct {
	Result *LogoutResponseResult `json:"result,omitempty"`
}

// LogoutResponseResult defines model for LogoutResponse.Result.
type LogoutResponseResult string

// Manga defines model for Manga.
type Manga struct {
	Attributes    *MangaAttributes    `json:"attributes,omitempty"`
	Id            *openapi_types.UUID `json:"id,omitempty"`
	Relationships *[]Relationship     `json:"relationships,omitempty"`
	Type          *MangaType          `json:"type,omitempty"`
}

// MangaType defines model for Manga.Type.
type MangaType string

// MangaAttributes defines model for MangaAttributes.
type MangaAttributes struct {
	AltTitles                      *[]LocalizedString                     `json:"altTitles,omitempty"`
	AvailableTranslatedLanguages   *[]string                              `json:"availableTranslatedLanguages,omitempty"`
	ChapterNumbersResetOnNewVolume *bool                                  `json:"chapterNumbersResetOnNewVolume,omitempty"`
	ContentRating                  *MangaAttributesContentRating          `json:"contentRating,omitempty"`
	CreatedAt                      *string                                `json:"createdAt,omitempty"`
	Description                    *LocalizedString                       `json:"description,omitempty"`
	IsLocked                       *bool                                  `json:"isLocked,omitempty"`
	LastChapter                    *string                                `json:"lastChapter"`
	LastVolume                     *string                                `json:"lastVolume"`
	LatestUploadedChapter          *openapi_types.UUID                    `json:"latestUploadedChapter,omitempty"`
	Links                          *map[string]string                     `json:"links,omitempty"`
	OriginalLanguage               *string                                `json:"originalLanguage,omitempty"`
	PublicationDemographic         *MangaAttributesPublicationDemographic `json:"publicationDemographic"`
	State                          *MangaAttributesState                  `json:"state,omitempty"`
	Status                         *MangaAttributesStatus                 `json:"status,omitempty"`
	Tags                           *[]Tag                                 `json:"tags,omitempty"`
	Title                          *LocalizedString                       `json:"title,omitempty"`
	UpdatedAt                      *string                                `json:"updatedAt,omitempty"`
	Version                        *int                                   `json:"version,omitempty"`

	// Year Year of release
	Year *int `json:"year"`
}

// MangaAttributesContentRating defines model for MangaAttributes.ContentRating.
type MangaAttributesContentRating string

// MangaAttributesPublicationDemographic defines model for MangaAttributes.PublicationDemographic.
type MangaAttributesPublicationDemographic string

// MangaAttributesState defines model for MangaAttributes.State.
type MangaAttributesState string

// MangaAttributesStatus defines model for MangaAttributes.Status.
type MangaAttributesStatus string

// MangaCreate defines model for MangaCreate.
type MangaCreate struct {
	AltTitles                      *[]LocalizedString                 `json:"altTitles,omitempty"`
	Artists                        *[]openapi_types.UUID              `json:"artists,omitempty"`
	Authors                        *[]openapi_types.UUID              `json:"authors,omitempty"`
	ChapterNumbersResetOnNewVolume *bool                              `json:"chapterNumbersResetOnNewVolume,omitempty"`
	ContentRating                  MangaCreateContentRating           `json:"contentRating"`
	Description                    *LocalizedString                   `json:"description,omitempty"`
	LastChapter                    *string                            `json:"lastChapter"`
	LastVolume                     *string                            `json:"lastVolume"`
	Links                          *map[string]string                 `json:"links,omitempty"`
	OriginalLanguage               string                             `json:"originalLanguage"`
	PrimaryCover                   *openapi_types.UUID                `json:"primaryCover"`
	PublicationDemographic         *MangaCreatePublicationDemographic `json:"publicationDemographic"`
	Status                         MangaCreateStatus                  `json:"status"`
	Tags                           *[]openapi_types.UUID              `json:"tags,omitempty"`
	Title                          LocalizedString                    `json:"title"`
	Version                        *int                               `json:"version,omitempty"`

	// Year Year of release
	Year *int `json:"year"`
}

// MangaCreateContentRating defines model for MangaCreate.ContentRating.
type MangaCreateContentRating string

// MangaCreatePublicationDemographic defines model for MangaCreate.PublicationDemographic.
type MangaCreatePublicationDemographic string

// MangaCreateStatus defines model for MangaCreate.Status.
type MangaCreateStatus string

// MangaEdit defines model for MangaEdit.
type MangaEdit struct {
	AltTitles                      *[]LocalizedString               `json:"altTitles,omitempty"`
	Artists                        *[]openapi_types.UUID            `json:"artists,omitempty"`
	Authors                        *[]openapi_types.UUID            `json:"authors,omitempty"`
	ChapterNumbersResetOnNewVolume *bool                            `json:"chapterNumbersResetOnNewVolume,omitempty"`
	ContentRating                  *MangaEditContentRating          `json:"contentRating,omitempty"`
	Description                    *LocalizedString                 `json:"description,omitempty"`
	LastChapter                    *string                          `json:"lastChapter"`
	LastVolume                     *string                          `json:"lastVolume"`
	Links                          *map[string]string               `json:"links,omitempty"`
	OriginalLanguage               *string                          `json:"originalLanguage,omitempty"`
	PrimaryCover                   *openapi_types.UUID              `json:"primaryCover"`
	PublicationDemographic         *MangaEditPublicationDemographic `json:"publicationDemographic"`
	Status                         *MangaEditStatus                 `json:"status,omitempty"`
	Tags                           *[]openapi_types.UUID            `json:"tags,omitempty"`
	Title                          *LocalizedString                 `json:"title,omitempty"`
	Version                        int                              `json:"version"`

	// Year Year of release
	Year *int `json:"year"`
}

// MangaEditContentRating defines model for MangaEdit.ContentRating.
type MangaEditContentRating string

// MangaEditPublicationDemographic defines model for MangaEdit.PublicationDemographic.
type MangaEditPublicationDemographic string

// MangaEditStatus defines model for MangaEdit.Status.
type MangaEditStatus string

// MangaList defines model for MangaList.
type MangaList struct {
	Data     *[]Manga `json:"data,omitempty"`
	Limit    *int     `json:"limit,omitempty"`
	Offset   *int     `json:"offset,omitempty"`
	Response *string  `json:"response,omitempty"`
	Result   *string  `json:"result,omitempty"`
	Total    *int     `json:"total,omitempty"`
}

// MangaRelation defines model for MangaRelation.
type MangaRelation struct {
	Attributes    *MangaRelationAttributes `json:"attributes,omitempty"`
	Id            *openapi_types.UUID      `json:"id,omitempty"`
	Relationships *[]Relationship          `json:"relationships,omitempty"`
	Type          *MangaRelationType       `json:"type,omitempty"`
}

// MangaRelationType defines model for MangaRelation.Type.
type MangaRelationType string

// MangaRelationAttributes defines model for MangaRelationAttributes.
type MangaRelationAttributes struct {
	Relation *MangaRelationAttributesRelation `json:"relation,omitempty"`
	Version  *int                             `json:"version,omitempty"`
}

// MangaRelationAttributesRelation defines model for MangaRelationAttributes.Relation.
type MangaRelationAttributesRelation string

// MangaRelationCreate defines model for MangaRelationCreate.
type MangaRelationCreate struct {
	Relation    MangaRelationCreateRelation `json:"relation"`
	TargetManga openapi_types.UUID          `json:"targetManga"`
}

// MangaRelationCreateRelation defines model for MangaRelationCreate.Relation.
type MangaRelationCreateRelation string

// MangaRelationList defines model for MangaRelationList.
type MangaRelationList struct {
	Data     *[]MangaRelation `json:"data,omitempty"`
	Limit    *int             `json:"limit,omitempty"`
	Offset   *int             `json:"offset,omitempty"`
	Response *string          `json:"response,omitempty"`
	Result   *string          `json:"result,omitempty"`
	Total    *int             `json:"total,omitempty"`
}

// MangaRelationRequest defines model for MangaRelationRequest.
type MangaRelationRequest struct {
	Relation    *MangaRelationRequestRelation `json:"relation,omitempty"`
	TargetManga *openapi_types.UUID           `json:"targetManga,omitempty"`
}

// MangaRelationRequestRelation defines model for MangaRelationRequest.Relation.
type MangaRelationRequestRelation string

// MangaRelationResponse defines model for MangaRelationResponse.
type MangaRelationResponse struct {
	Data     *MangaRelation               `json:"data,omitempty"`
	Response *string                      `json:"response,omitempty"`
	Result   *MangaRelationResponseResult `json:"result,omitempty"`
}

// MangaRelationResponseResult defines model for MangaRelationResponse.Result.
type MangaRelationResponseResult string

// MangaRequest defines model for MangaRequest.
type MangaRequest struct {
	AltTitles                      *[]LocalizedString                  `json:"altTitles,omitempty"`
	Artists                        *[]openapi_types.UUID               `json:"artists,omitempty"`
	Authors                        *[]openapi_types.UUID               `json:"authors,omitempty"`
	ChapterNumbersResetOnNewVolume *bool                               `json:"chapterNumbersResetOnNewVolume,omitempty"`
	ContentRating                  *MangaRequestContentRating          `json:"contentRating,omitempty"`
	Description                    *LocalizedString                    `json:"description,omitempty"`
	LastChapter                    *string                             `json:"lastChapter"`
	LastVolume                     *string                             `json:"lastVolume"`
	Links                          *map[string]string                  `json:"links,omitempty"`
	OriginalLanguage               *string                             `json:"originalLanguage,omitempty"`
	PrimaryCover                   *openapi_types.UUID                 `json:"primaryCover"`
	PublicationDemographic         *MangaRequestPublicationDemographic `json:"publicationDemographic"`
	Status                         *MangaRequestStatus                 `json:"status,omitempty"`
	Tags                           *[]openapi_types.UUID               `json:"tags,omitempty"`
	Title                          *LocalizedString                    `json:"title,omitempty"`
	Version                        *int                                `json:"version,omitempty"`

	// Year Year of release
	Year *int `json:"year"`
}

// MangaRequestContentRating defines model for MangaRequest.ContentRating.
type MangaRequestContentRating string

// MangaRequestPublicationDemographic defines model for MangaRequest.PublicationDemographic.
type MangaRequestPublicationDemographic string

// MangaRequestStatus defines model for MangaRequest.Status.
type MangaRequestStatus string

// MangaResponse defines model for MangaResponse.
type MangaResponse struct {
	Data     *Manga               `json:"data,omitempty"`
	Response *string              `json:"response,omitempty"`
	Result   *MangaResponseResult `json:"result,omitempty"`
}

// MangaResponseResult defines model for MangaResponse.Result.
type MangaResponseResult string

// MappingId defines model for MappingId.
type MappingId struct {
	Attributes    *MappingIdAttributes `json:"attributes,omitempty"`
	Id            *openapi_types.UUID  `json:"id,omitempty"`
	Relationships *[]Relationship      `json:"relationships,omitempty"`
	Type          *MappingIdType       `json:"type,omitempty"`
}

// MappingIdType defines model for MappingId.Type.
type MappingIdType string

// MappingIdAttributes defines model for MappingIdAttributes.
type MappingIdAttributes struct {
	LegacyId *int                     `json:"legacyId,omitempty"`
	NewId    *openapi_types.UUID      `json:"newId,omitempty"`
	Type     *MappingIdAttributesType `json:"type,omitempty"`
}

// MappingIdAttributesType defines model for MappingIdAttributes.Type.
type MappingIdAttributesType string

// MappingIdBody defines model for MappingIdBody.
type MappingIdBody struct {
	Ids  *[]int             `json:"ids,omitempty"`
	Type *MappingIdBodyType `json:"type,omitempty"`
}

// MappingIdBodyType defines model for MappingIdBody.Type.
type MappingIdBodyType string

// MappingIdResponse defines model for MappingIdResponse.
type MappingIdResponse struct {
	Data     *[]MappingId `json:"data,omitempty"`
	Limit    *int         `json:"limit,omitempty"`
	Offset   *int         `json:"offset,omitempty"`
	Response *string      `json:"response,omitempty"`
	Result   *string      `json:"result,omitempty"`
	Total    *int         `json:"total,omitempty"`
}

// ReferenceExpansionApiClient Reference expansion options for api_client entities or lists
type ReferenceExpansionApiClient = []string

// ReferenceExpansionAuthor Reference expansion options for author/artist entities or lists
type ReferenceExpansionAuthor = []string

// ReferenceExpansionChapter Reference expansion options for chapter entities or lists
type ReferenceExpansionChapter = []string

// ReferenceExpansionCoverArt Reference expansion options for cover art entities or lists
type ReferenceExpansionCoverArt = []string

// ReferenceExpansionManga Reference expansion options for manga entities or lists
type ReferenceExpansionManga = []string

// ReferenceExpansionMangaRelation Reference expansion options for manga relation entities or lists
type ReferenceExpansionMangaRelation = []string

// ReferenceExpansionReport Reference expansion options for user report entities or lists
type ReferenceExpansionReport = []string

// ReferenceExpansionScanlationGroup Reference expansion options for scanlation group entities or lists
type ReferenceExpansionScanlationGroup = []string

// RefreshResponse defines model for RefreshResponse.
type RefreshResponse struct {
	Message *string               `json:"message,omitempty"`
	Result  RefreshResponseResult `json:"result"`
	Token   *struct {
		Refresh *string `json:"refresh,omitempty"`
		Session *string `json:"session,omitempty"`
	} `json:"token,omitempty"`
}

// RefreshResponseResult defines model for RefreshResponse.Result.
type RefreshResponseResult string

// RefreshToken defines model for RefreshToken.
type RefreshToken struct {
	Token string `json:"token"`
}

// Relationship defines model for Relationship.
type Relationship struct {
	// Attributes If Reference Expansion is applied, contains objects attributes
	Attributes *map[string]interface{} `json:"attributes"`
	Id         *openapi_types.UUID     `json:"id,omitempty"`

	// Related Related Manga type, only present if you are on a Manga entity and a Manga relationship
	Related *RelationshipRelated `json:"related,omitempty"`
	Type    *string              `json:"type,omitempty"`
}

// RelationshipRelated Related Manga type, only present if you are on a Manga entity and a Manga relationship
type RelationshipRelated string

// Report defines model for Report.
type Report struct {
	Attributes    *ReportAttributes   `json:"attributes,omitempty"`
	Id            *openapi_types.UUID `json:"id,omitempty"`
	Relationships *[]Relationship     `json:"relationships,omitempty"`
	Type          *ReportType         `json:"type,omitempty"`
}

// ReportType defines model for Report.Type.
type ReportType string

// ReportAttributes defines model for ReportAttributes.
type ReportAttributes struct {
	CreatedAt *string                 `json:"createdAt,omitempty"`
	Details   *string                 `json:"details,omitempty"`
	ObjectId  *string                 `json:"objectId,omitempty"`
	Status    *ReportAttributesStatus `json:"status,omitempty"`
}

// ReportAttributesStatus defines model for ReportAttributes.Status.
type ReportAttributesStatus string

// ReportListResponse defines model for ReportListResponse.
type ReportListResponse struct {
	Data     *[]Report                 `json:"data,omitempty"`
	Limit    *int                      `json:"limit,omitempty"`
	Offset   *int                      `json:"offset,omitempty"`
	Response *string                   `json:"response,omitempty"`
	Result   *ReportListResponseResult `json:"result,omitempty"`
	Total    *int                      `json:"total,omitempty"`
}

// ReportListResponseResult defines model for ReportListResponse.Result.
type ReportListResponseResult string

// Response defines model for Response.
type Response struct {
	Result *ResponseResult `json:"result,omitempty"`
}

// ResponseResult defines model for Response.Result.
type ResponseResult string

// ScanlationGroup defines model for ScanlationGroup.
type ScanlationGroup struct {
	Attributes    *ScanlationGroupAttributes `json:"attributes,omitempty"`
	Id            *openapi_types.UUID        `json:"id,omitempty"`
	Relationships *[]Relationship            `json:"relationships,omitempty"`
	Type          *ScanlationGroupType       `json:"type,omitempty"`
}

// ScanlationGroupType defines model for ScanlationGroup.Type.
type ScanlationGroupType string

// ScanlationGroupAttributes defines model for ScanlationGroupAttributes.
type ScanlationGroupAttributes struct {
	AltNames        *[]LocalizedString `json:"altNames,omitempty"`
	ContactEmail    *string            `json:"contactEmail"`
	CreatedAt       *string            `json:"createdAt,omitempty"`
	Description     *string            `json:"description"`
	Discord         *string            `json:"discord"`
	ExLicensed      *bool              `json:"exLicensed,omitempty"`
	FocusedLanguage *[]string          `json:"focusedLanguage"`
	Inactive        *bool              `json:"inactive,omitempty"`
	IrcChannel      *string            `json:"ircChannel"`
	IrcServer       *string            `json:"ircServer"`
	Locked          *bool              `json:"locked,omitempty"`
	MangaUpdates    *string            `json:"mangaUpdates"`
	Name            *string            `json:"name,omitempty"`
	Official        *bool              `json:"official,omitempty"`

	// PublishDelay Should respected ISO 8601 duration specification: https://en.wikipedia.org/wiki/ISO_8601#Durations
	PublishDelay *string `json:"publishDelay,omitempty"`
	Twitter      *string `json:"twitter"`
	UpdatedAt    *string `json:"updatedAt,omitempty"`
	Verified     *bool   `json:"verified,omitempty"`
	Version      *int    `json:"version,omitempty"`
	Website      *string `json:"website"`
}

// ScanlationGroupEdit defines model for ScanlationGroupEdit.
type ScanlationGroupEdit struct {
	ContactEmail     *string               `json:"contactEmail"`
	Description      *string               `json:"description"`
	Discord          *string               `json:"discord"`
	FocusedLanguages *[]string             `json:"focusedLanguages"`
	Inactive         *bool                 `json:"inactive,omitempty"`
	IrcChannel       *string               `json:"ircChannel"`
	IrcServer        *string               `json:"ircServer"`
	Leader           *openapi_types.UUID   `json:"leader,omitempty"`
	Locked           *bool                 `json:"locked,omitempty"`
	MangaUpdates     *string               `json:"mangaUpdates"`
	Members          *[]openapi_types.UUID `json:"members,omitempty"`
	Name             *string               `json:"name,omitempty"`
	PublishDelay     *string               `json:"publishDelay,omitempty"`
	Twitter          *string               `json:"twitter"`
	Version          int                   `json:"version"`
	Website          *string               `json:"website"`
}

// ScanlationGroupList defines model for ScanlationGroupList.
type ScanlationGroupList struct {
	Data     *[]ScanlationGroup `json:"data,omitempty"`
	Limit    *int               `json:"limit,omitempty"`
	Offset   *int               `json:"offset,omitempty"`
	Response *string            `json:"response,omitempty"`
	Result   *string            `json:"result,omitempty"`
	Total    *int               `json:"total,omitempty"`
}

// ScanlationGroupResponse defines model for ScanlationGroupResponse.
type ScanlationGroupResponse struct {
	Data     *ScanlationGroup               `json:"data,omitempty"`
	Response *string                        `json:"response,omitempty"`
	Result   *ScanlationGroupResponseResult `json:"result,omitempty"`
}

// ScanlationGroupResponseResult defines model for ScanlationGroupResponse.Result.
type ScanlationGroupResponseResult string

// StatisticsDetailsComments Comments-related statistics of an entity.
// If it is `null`, the entity doesn't have a backing comments thread, and therefore has no comments yet.
type StatisticsDetailsComments struct {
	// RepliesCount The number of replies on the MangaDex Forums thread backing this entity's comments. This excludes the initial comment that opens the thread, which is created by our systems.
	RepliesCount *float32 `json:"repliesCount,omitempty"`

	// ThreadId The id of the thread backing the comments for that entity on the MangaDex Forums.
	ThreadId *float32 `json:"threadId,omitempty"`
}

// Tag defines model for Tag.
type Tag struct {
	Attributes    *TagAttributes      `json:"attributes,omitempty"`
	Id            *openapi_types.UUID `json:"id,omitempty"`
	Relationships *[]Relationship     `json:"relationships,omitempty"`
	Type          *TagType            `json:"type,omitempty"`
}

// TagType defines model for Tag.Type.
type TagType string

// TagAttributes defines model for TagAttributes.
type TagAttributes struct {
	Description *LocalizedString    `json:"description,omitempty"`
	Group       *TagAttributesGroup `json:"group,omitempty"`
	Name        *LocalizedString    `json:"name,omitempty"`
	Version     *int                `json:"version,omitempty"`
}

// TagAttributesGroup defines model for TagAttributes.Group.
type TagAttributesGroup string

// TagResponse defines model for TagResponse.
type TagResponse struct {
	Data     *[]Tag  `json:"data,omitempty"`
	Limit    *int    `json:"limit,omitempty"`
	Offset   *int    `json:"offset,omitempty"`
	Response *string `json:"response,omitempty"`
	Result   *string `json:"result,omitempty"`
	Total    *int    `json:"total,omitempty"`
}

// UpdateMangaStatus defines model for UpdateMangaStatus.
type UpdateMangaStatus struct {
	Status *UpdateMangaStatusStatus `json:"status"`
}

// UpdateMangaStatusStatus defines model for UpdateMangaStatus.Status.
type UpdateMangaStatusStatus string

// UploadSession defines model for UploadSession.
type UploadSession struct {
	Attributes *UploadSessionAttributes `json:"attributes,omitempty"`
	Id         *openapi_types.UUID      `json:"id,omitempty"`
	Type       *UploadSessionType       `json:"type,omitempty"`
}

// UploadSessionType defines model for UploadSession.Type.
type UploadSessionType string

// UploadSessionAttributes defines model for UploadSessionAttributes.
type UploadSessionAttributes struct {
	CreatedAt   *string `json:"createdAt,omitempty"`
	IsCommitted *bool   `json:"isCommitted,omitempty"`
	IsDeleted   *bool   `json:"isDeleted,omitempty"`
	IsProcessed *bool   `json:"isProcessed,omitempty"`
	UpdatedAt   *string `json:"updatedAt,omitempty"`
	Version     *int    `json:"version,omitempty"`
}

// UploadSessionFile defines model for UploadSessionFile.
type UploadSessionFile struct {
	Attributes *UploadSessionFileAttributes `json:"attributes,omitempty"`
	Id         *openapi_types.UUID          `json:"id,omitempty"`
	Type       *UploadSessionFileType       `json:"type,omitempty"`
}

// UploadSessionFileType defines model for UploadSessionFile.Type.
type UploadSessionFileType string

// UploadSessionFileAttributes defines model for UploadSessionFileAttributes.
type UploadSessionFileAttributes struct {
	FileHash         *string                            `json:"fileHash,omitempty"`
	FileSize         *float32                           `json:"fileSize,omitempty"`
	MimeType         *string                            `json:"mimeType,omitempty"`
	OriginalFileName *string                            `json:"originalFileName,omitempty"`
	Source           *UploadSessionFileAttributesSource `json:"source,omitempty"`
	Version          *int                               `json:"version,omitempty"`
}

// UploadSessionFileAttributesSource defines model for UploadSessionFileAttributes.Source.
type UploadSessionFileAttributesSource string

// User defines model for User.
type User struct {
	Attributes    *UserAttributes     `json:"attributes,omitempty"`
	Id            *openapi_types.UUID `json:"id,omitempty"`
	Relationships *[]Relationship     `json:"relationships,omitempty"`
	Type          *UserType           `json:"type,omitempty"`
}

// UserType defines model for User.Type.
type UserType string

// UserAttributes defines model for UserAttributes.
type UserAttributes struct {
	Roles    *[]string `json:"roles,omitempty"`
	Username *string   `json:"username,omitempty"`
	Version  *int      `json:"version,omitempty"`
}

// UserList defines model for UserList.
type UserList struct {
	Data     *[]User `json:"data,omitempty"`
	Limit    *int    `json:"limit,omitempty"`
	Offset   *int    `json:"offset,omitempty"`
	Response *string `json:"response,omitempty"`
	Result   *string `json:"result,omitempty"`
	Total    *int    `json:"total,omitempty"`
}

// UserResponse defines model for UserResponse.
type UserResponse struct {
	Data     *User               `json:"data,omitempty"`
	Response *string             `json:"response,omitempty"`
	Result   *UserResponseResult `json:"result,omitempty"`
}

// UserResponseResult defines model for UserResponse.Result.
type UserResponseResult string

// GetAtHomeServerChapterIdParams defines parameters for GetAtHomeServerChapterId.
type GetAtHomeServerChapterIdParams struct {
	// ForcePort443 Force selecting from MangaDex@Home servers that use the standard HTTPS port 443.
	//
	// While the conventional port for HTTPS traffic is 443 and servers are encouraged to use it, it is not a hard requirement as it technically isn't
	// anything special.
	//
	// However, some misbehaving school/office network will at time block traffic to non-standard ports, and setting this flag to `true` will ensure
	// selection of a server that uses these.
	ForcePort443 *bool `form:"forcePort443,omitempty" json:"forcePort443,omitempty"`
}

// PostAuthLoginParams defines parameters for PostAuthLogin.
type PostAuthLoginParams struct {
	ContentType string `json:"Content-Type"`
}

// PostAuthRefreshParams defines parameters for PostAuthRefresh.
type PostAuthRefreshParams struct {
	ContentType string `json:"Content-Type"`
}

// GetAuthorParams defines parameters for GetAuthor.
type GetAuthorParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// Ids Author ids (limited to 100 per request)
	Ids   *[]openapi_types.UUID `form:"ids[],omitempty" json:"ids[],omitempty"`
	Name  *string               `form:"name,omitempty" json:"name,omitempty"`
	Order *struct {
		Name *GetAuthorParamsOrderName `json:"name,omitempty"`
	} `json:"order,omitempty"`
	Includes *ReferenceExpansionAuthor `form:"includes[],omitempty" json:"includes[],omitempty"`
}

// GetAuthorParamsOrderName defines parameters for GetAuthor.
type GetAuthorParamsOrderName string

// PostAuthorParams defines parameters for PostAuthor.
type PostAuthorParams struct {
	ContentType string `json:"Content-Type"`
}

// GetAuthorIdParams defines parameters for GetAuthorId.
type GetAuthorIdParams struct {
	Includes *ReferenceExpansionAuthor `form:"includes[],omitempty" json:"includes[],omitempty"`
}

// PutAuthorIdParams defines parameters for PutAuthorId.
type PutAuthorIdParams struct {
	ContentType string `json:"Content-Type"`
}

// PostCaptchaSolveJSONBody defines parameters for PostCaptchaSolve.
type PostCaptchaSolveJSONBody struct {
	CaptchaChallenge string `json:"captchaChallenge"`
}

// PostCaptchaSolveParams defines parameters for PostCaptchaSolve.
type PostCaptchaSolveParams struct {
	ContentType string `json:"Content-Type"`
}

// GetChapterParams defines parameters for GetChapter.
type GetChapterParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// Ids Chapter ids (limited to 100 per request)
	Ids      *[]openapi_types.UUID `form:"ids[],omitempty" json:"ids[],omitempty"`
	Title    *string               `form:"title,omitempty" json:"title,omitempty"`
	Groups   *[]openapi_types.UUID `form:"groups[],omitempty" json:"groups[],omitempty"`
	Uploader *struct {
		union json.RawMessage
	} `form:"uploader,omitempty" json:"uploader,omitempty"`
	Manga  *openapi_types.UUID `form:"manga,omitempty" json:"manga,omitempty"`
	Volume *struct {
		union json.RawMessage
	} `form:"volume[],omitempty" json:"volume[],omitempty"`
	Chapter *struct {
		union json.RawMessage
	} `form:"chapter,omitempty" json:"chapter,omitempty"`
	TranslatedLanguage       *[]string                               `form:"translatedLanguage[],omitempty" json:"translatedLanguage[],omitempty"`
	OriginalLanguage         *[]string                               `form:"originalLanguage[],omitempty" json:"originalLanguage[],omitempty"`
	ExcludedOriginalLanguage *[]string                               `form:"excludedOriginalLanguage[],omitempty" json:"excludedOriginalLanguage[],omitempty"`
	ContentRating            *[]GetChapterParamsContentRating        `form:"contentRating[],omitempty" json:"contentRating[],omitempty"`
	ExcludedGroups           *[]openapi_types.UUID                   `form:"excludedGroups[],omitempty" json:"excludedGroups[],omitempty"`
	ExcludedUploaders        *[]openapi_types.UUID                   `form:"excludedUploaders[],omitempty" json:"excludedUploaders[],omitempty"`
	IncludeFutureUpdates     *GetChapterParamsIncludeFutureUpdates   `form:"includeFutureUpdates,omitempty" json:"includeFutureUpdates,omitempty"`
	IncludeEmptyPages        *GetChapterParamsIncludeEmptyPages      `form:"includeEmptyPages,omitempty" json:"includeEmptyPages,omitempty"`
	IncludeFuturePublishAt   *GetChapterParamsIncludeFuturePublishAt `form:"includeFuturePublishAt,omitempty" json:"includeFuturePublishAt,omitempty"`
	IncludeExternalUrl       *GetChapterParamsIncludeExternalUrl     `form:"includeExternalUrl,omitempty" json:"includeExternalUrl,omitempty"`
	IncludeUnavailable       *GetChapterParamsIncludeUnavailable     `form:"includeUnavailable,omitempty" json:"includeUnavailable,omitempty"`
	CreatedAtSince           *string                                 `form:"createdAtSince,omitempty" json:"createdAtSince,omitempty"`
	UpdatedAtSince           *string                                 `form:"updatedAtSince,omitempty" json:"updatedAtSince,omitempty"`
	PublishAtSince           *string                                 `form:"publishAtSince,omitempty" json:"publishAtSince,omitempty"`
	Order                    *struct {
		Chapter    *GetChapterParamsOrderChapter    `json:"chapter,omitempty"`
		CreatedAt  *GetChapterParamsOrderCreatedAt  `json:"createdAt,omitempty"`
		PublishAt  *GetChapterParamsOrderPublishAt  `json:"publishAt,omitempty"`
		ReadableAt *GetChapterParamsOrderReadableAt `json:"readableAt,omitempty"`
		UpdatedAt  *GetChapterParamsOrderUpdatedAt  `json:"updatedAt,omitempty"`
		Volume     *GetChapterParamsOrderVolume     `json:"volume,omitempty"`
	} `json:"order,omitempty"`
	Includes *[]GetChapterParamsIncludes `form:"includes,omitempty" json:"includes,omitempty"`
}

// GetChapterParamsUploader0 defines parameters for GetChapter.
type GetChapterParamsUploader0 = openapi_types.UUID

// GetChapterParamsUploader1 defines parameters for GetChapter.
type GetChapterParamsUploader1 = []openapi_types.UUID

// GetChapterParamsVolume0 defines parameters for GetChapter.
type GetChapterParamsVolume0 = string

// GetChapterParamsVolume1 defines parameters for GetChapter.
type GetChapterParamsVolume1 = []string

// GetChapterParamsChapter0 defines parameters for GetChapter.
type GetChapterParamsChapter0 = string

// GetChapterParamsChapter1 defines parameters for GetChapter.
type GetChapterParamsChapter1 = []string

// GetChapterParamsContentRating defines parameters for GetChapter.
type GetChapterParamsContentRating string

// GetChapterParamsIncludeFutureUpdates defines parameters for GetChapter.
type GetChapterParamsIncludeFutureUpdates string

// GetChapterParamsIncludeEmptyPages defines parameters for GetChapter.
type GetChapterParamsIncludeEmptyPages int

// GetChapterParamsIncludeFuturePublishAt defines parameters for GetChapter.
type GetChapterParamsIncludeFuturePublishAt int

// GetChapterParamsIncludeExternalUrl defines parameters for GetChapter.
type GetChapterParamsIncludeExternalUrl int

// GetChapterParamsIncludeUnavailable defines parameters for GetChapter.
type GetChapterParamsIncludeUnavailable string

// GetChapterParamsOrderChapter defines parameters for GetChapter.
type GetChapterParamsOrderChapter string

// GetChapterParamsOrderCreatedAt defines parameters for GetChapter.
type GetChapterParamsOrderCreatedAt string

// GetChapterParamsOrderPublishAt defines parameters for GetChapter.
type GetChapterParamsOrderPublishAt string

// GetChapterParamsOrderReadableAt defines parameters for GetChapter.
type GetChapterParamsOrderReadableAt string

// GetChapterParamsOrderUpdatedAt defines parameters for GetChapter.
type GetChapterParamsOrderUpdatedAt string

// GetChapterParamsOrderVolume defines parameters for GetChapter.
type GetChapterParamsOrderVolume string

// GetChapterParamsIncludes defines parameters for GetChapter.
type GetChapterParamsIncludes string

// GetChapterIdParams defines parameters for GetChapterId.
type GetChapterIdParams struct {
	Includes *ReferenceExpansionChapter `form:"includes[],omitempty" json:"includes[],omitempty"`
}

// PutChapterIdParams defines parameters for PutChapterId.
type PutChapterIdParams struct {
	ContentType string `json:"Content-Type"`
}

// GetListApiclientsParams defines parameters for GetListApiclients.
type GetListApiclientsParams struct {
	Limit    *int                          `form:"limit,omitempty" json:"limit,omitempty"`
	Offset   *int                          `form:"offset,omitempty" json:"offset,omitempty"`
	State    *GetListApiclientsParamsState `form:"state,omitempty" json:"state,omitempty"`
	Name     *string                       `form:"name,omitempty" json:"name,omitempty"`
	Includes *ReferenceExpansionApiClient  `form:"includes[],omitempty" json:"includes[],omitempty"`
	Order    *struct {
		CreatedAt *GetListApiclientsParamsOrderCreatedAt `json:"createdAt,omitempty"`
		Name      *GetListApiclientsParamsOrderName      `json:"name,omitempty"`
		UpdatedAt *GetListApiclientsParamsOrderUpdatedAt `json:"updatedAt,omitempty"`
	} `json:"order,omitempty"`
}

// GetListApiclientsParamsState defines parameters for GetListApiclients.
type GetListApiclientsParamsState string

// GetListApiclientsParamsOrderCreatedAt defines parameters for GetListApiclients.
type GetListApiclientsParamsOrderCreatedAt string

// GetListApiclientsParamsOrderName defines parameters for GetListApiclients.
type GetListApiclientsParamsOrderName string

// GetListApiclientsParamsOrderUpdatedAt defines parameters for GetListApiclients.
type GetListApiclientsParamsOrderUpdatedAt string

// PostCreateApiclientParams defines parameters for PostCreateApiclient.
type PostCreateApiclientParams struct {
	ContentType string `json:"Content-Type"`
}

// DeleteApiclientParams defines parameters for DeleteApiclient.
type DeleteApiclientParams struct {
	Version *string `form:"version,omitempty" json:"version,omitempty"`
}

// GetApiclientParams defines parameters for GetApiclient.
type GetApiclientParams struct {
	Includes *ReferenceExpansionApiClient `form:"includes[],omitempty" json:"includes[],omitempty"`
}

// PostEditApiclientParams defines parameters for PostEditApiclient.
type PostEditApiclientParams struct {
	ContentType string `json:"Content-Type"`
}

// PostRegenerateApiclientSecretJSONBody defines parameters for PostRegenerateApiclientSecret.
type PostRegenerateApiclientSecretJSONBody = map[string]interface{}

// PostRegenerateApiclientSecretParams defines parameters for PostRegenerateApiclientSecret.
type PostRegenerateApiclientSecretParams struct {
	ContentType string `json:"Content-Type"`
}

// GetCoverParams defines parameters for GetCover.
type GetCoverParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// Manga Manga ids (limited to 100 per request)
	Manga *[]openapi_types.UUID `form:"manga[],omitempty" json:"manga[],omitempty"`

	// Ids Covers ids (limited to 100 per request)
	Ids *[]openapi_types.UUID `form:"ids[],omitempty" json:"ids[],omitempty"`

	// Uploaders User ids (limited to 100 per request)
	Uploaders *[]openapi_types.UUID `form:"uploaders[],omitempty" json:"uploaders[],omitempty"`

	// Locales Locales of cover art (limited to 100 per request)
	Locales *[]string `form:"locales[],omitempty" json:"locales[],omitempty"`
	Order   *struct {
		CreatedAt *GetCoverParamsOrderCreatedAt `json:"createdAt,omitempty"`
		UpdatedAt *GetCoverParamsOrderUpdatedAt `json:"updatedAt,omitempty"`
		Volume    *GetCoverParamsOrderVolume    `json:"volume,omitempty"`
	} `json:"order,omitempty"`
	Includes *ReferenceExpansionCoverArt `form:"includes[],omitempty" json:"includes[],omitempty"`
}

// GetCoverParamsOrderCreatedAt defines parameters for GetCover.
type GetCoverParamsOrderCreatedAt string

// GetCoverParamsOrderUpdatedAt defines parameters for GetCover.
type GetCoverParamsOrderUpdatedAt string

// GetCoverParamsOrderVolume defines parameters for GetCover.
type GetCoverParamsOrderVolume string

// GetCoverIdParams defines parameters for GetCoverId.
type GetCoverIdParams struct {
	Includes *ReferenceExpansionCoverArt `form:"includes[],omitempty" json:"includes[],omitempty"`
}

// UploadCoverMultipartBody defines parameters for UploadCover.
type UploadCoverMultipartBody struct {
	Description *string             `json:"description,omitempty"`
	File        *openapi_types.File `json:"file,omitempty"`
	Locale      *string             `json:"locale,omitempty"`
	Volume      *CoverVolume        `json:"volume"`
}

// UploadCoverParams defines parameters for UploadCover.
type UploadCoverParams struct {
	ContentType string `json:"Content-Type"`
}

// EditCoverParams defines parameters for EditCover.
type EditCoverParams struct {
	ContentType string `json:"Content-Type"`
}

// ForumsThreadCreateJSONBody defines parameters for ForumsThreadCreate.
type ForumsThreadCreateJSONBody struct {
	// Id The id of the resource
	Id *openapi_types.UUID `json:"id,omitempty"`

	// Type The type of the resource
	Type *ForumsThreadCreateJSONBodyType `json:"type,omitempty"`
}

// ForumsThreadCreateJSONBodyType defines parameters for ForumsThreadCreate.
type ForumsThreadCreateJSONBodyType string

// GetSearchGroupParams defines parameters for GetSearchGroup.
type GetSearchGroupParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// Ids ScanlationGroup ids (limited to 100 per request)
	Ids             *[]openapi_types.UUID              `form:"ids[],omitempty" json:"ids[],omitempty"`
	Name            *string                            `form:"name,omitempty" json:"name,omitempty"`
	FocusedLanguage *string                            `form:"focusedLanguage,omitempty" json:"focusedLanguage,omitempty"`
	Includes        *ReferenceExpansionScanlationGroup `form:"includes[],omitempty" json:"includes[],omitempty"`
	Order           *struct {
		CreatedAt     *GetSearchGroupParamsOrderCreatedAt     `json:"createdAt,omitempty"`
		FollowedCount *GetSearchGroupParamsOrderFollowedCount `json:"followedCount,omitempty"`
		Name          *GetSearchGroupParamsOrderName          `json:"name,omitempty"`
		Relevance     *GetSearchGroupParamsOrderRelevance     `json:"relevance,omitempty"`
		UpdatedAt     *GetSearchGroupParamsOrderUpdatedAt     `json:"updatedAt,omitempty"`
	} `json:"order,omitempty"`
}

// GetSearchGroupParamsOrderCreatedAt defines parameters for GetSearchGroup.
type GetSearchGroupParamsOrderCreatedAt string

// GetSearchGroupParamsOrderFollowedCount defines parameters for GetSearchGroup.
type GetSearchGroupParamsOrderFollowedCount string

// GetSearchGroupParamsOrderName defines parameters for GetSearchGroup.
type GetSearchGroupParamsOrderName string

// GetSearchGroupParamsOrderRelevance defines parameters for GetSearchGroup.
type GetSearchGroupParamsOrderRelevance string

// GetSearchGroupParamsOrderUpdatedAt defines parameters for GetSearchGroup.
type GetSearchGroupParamsOrderUpdatedAt string

// PostGroupParams defines parameters for PostGroup.
type PostGroupParams struct {
	ContentType string `json:"Content-Type"`
}

// GetGroupIdParams defines parameters for GetGroupId.
type GetGroupIdParams struct {
	Includes *ReferenceExpansionScanlationGroup `form:"includes[],omitempty" json:"includes[],omitempty"`
}

// PutGroupIdParams defines parameters for PutGroupId.
type PutGroupIdParams struct {
	ContentType string `json:"Content-Type"`
}

// PostLegacyMappingParams defines parameters for PostLegacyMapping.
type PostLegacyMappingParams struct {
	ContentType string `json:"Content-Type"`
}

// PostListParams defines parameters for PostList.
type PostListParams struct {
	ContentType string `json:"Content-Type"`
}

// PutListIdParams defines parameters for PutListId.
type PutListIdParams struct {
	ContentType string `json:"Content-Type"`
}

// GetListIdFeedParams defines parameters for GetListIdFeed.
type GetListIdFeedParams struct {
	Limit                    *int                                     `form:"limit,omitempty" json:"limit,omitempty"`
	Offset                   *int                                     `form:"offset,omitempty" json:"offset,omitempty"`
	TranslatedLanguage       *[]string                                `form:"translatedLanguage[],omitempty" json:"translatedLanguage[],omitempty"`
	OriginalLanguage         *[]string                                `form:"originalLanguage[],omitempty" json:"originalLanguage[],omitempty"`
	ExcludedOriginalLanguage *[]string                                `form:"excludedOriginalLanguage[],omitempty" json:"excludedOriginalLanguage[],omitempty"`
	ContentRating            *[]GetListIdFeedParamsContentRating      `form:"contentRating[],omitempty" json:"contentRating[],omitempty"`
	ExcludedGroups           *[]openapi_types.UUID                    `form:"excludedGroups[],omitempty" json:"excludedGroups[],omitempty"`
	ExcludedUploaders        *[]openapi_types.UUID                    `form:"excludedUploaders[],omitempty" json:"excludedUploaders[],omitempty"`
	IncludeFutureUpdates     *GetListIdFeedParamsIncludeFutureUpdates `form:"includeFutureUpdates,omitempty" json:"includeFutureUpdates,omitempty"`
	CreatedAtSince           *string                                  `form:"createdAtSince,omitempty" json:"createdAtSince,omitempty"`
	UpdatedAtSince           *string                                  `form:"updatedAtSince,omitempty" json:"updatedAtSince,omitempty"`
	PublishAtSince           *string                                  `form:"publishAtSince,omitempty" json:"publishAtSince,omitempty"`
	Order                    *struct {
		Chapter    *GetListIdFeedParamsOrderChapter    `json:"chapter,omitempty"`
		CreatedAt  *GetListIdFeedParamsOrderCreatedAt  `json:"createdAt,omitempty"`
		PublishAt  *GetListIdFeedParamsOrderPublishAt  `json:"publishAt,omitempty"`
		ReadableAt *GetListIdFeedParamsOrderReadableAt `json:"readableAt,omitempty"`
		UpdatedAt  *GetListIdFeedParamsOrderUpdatedAt  `json:"updatedAt,omitempty"`
		Volume     *GetListIdFeedParamsOrderVolume     `json:"volume,omitempty"`
	} `json:"order,omitempty"`
	Includes               *ReferenceExpansionChapter                 `form:"includes[],omitempty" json:"includes[],omitempty"`
	IncludeEmptyPages      *GetListIdFeedParamsIncludeEmptyPages      `form:"includeEmptyPages,omitempty" json:"includeEmptyPages,omitempty"`
	IncludeFuturePublishAt *GetListIdFeedParamsIncludeFuturePublishAt `form:"includeFuturePublishAt,omitempty" json:"includeFuturePublishAt,omitempty"`
	IncludeExternalUrl     *GetListIdFeedParamsIncludeExternalUrl     `form:"includeExternalUrl,omitempty" json:"includeExternalUrl,omitempty"`
	IncludeUnavailable     *GetListIdFeedParamsIncludeUnavailable     `form:"includeUnavailable,omitempty" json:"includeUnavailable,omitempty"`
}

// GetListIdFeedParamsContentRating defines parameters for GetListIdFeed.
type GetListIdFeedParamsContentRating string

// GetListIdFeedParamsIncludeFutureUpdates defines parameters for GetListIdFeed.
type GetListIdFeedParamsIncludeFutureUpdates string

// GetListIdFeedParamsOrderChapter defines parameters for GetListIdFeed.
type GetListIdFeedParamsOrderChapter string

// GetListIdFeedParamsOrderCreatedAt defines parameters for GetListIdFeed.
type GetListIdFeedParamsOrderCreatedAt string

// GetListIdFeedParamsOrderPublishAt defines parameters for GetListIdFeed.
type GetListIdFeedParamsOrderPublishAt string

// GetListIdFeedParamsOrderReadableAt defines parameters for GetListIdFeed.
type GetListIdFeedParamsOrderReadableAt string

// GetListIdFeedParamsOrderUpdatedAt defines parameters for GetListIdFeed.
type GetListIdFeedParamsOrderUpdatedAt string

// GetListIdFeedParamsOrderVolume defines parameters for GetListIdFeed.
type GetListIdFeedParamsOrderVolume string

// GetListIdFeedParamsIncludeEmptyPages defines parameters for GetListIdFeed.
type GetListIdFeedParamsIncludeEmptyPages int

// GetListIdFeedParamsIncludeFuturePublishAt defines parameters for GetListIdFeed.
type GetListIdFeedParamsIncludeFuturePublishAt int

// GetListIdFeedParamsIncludeExternalUrl defines parameters for GetListIdFeed.
type GetListIdFeedParamsIncludeExternalUrl int

// GetListIdFeedParamsIncludeUnavailable defines parameters for GetListIdFeed.
type GetListIdFeedParamsIncludeUnavailable string

// UnfollowListIdJSONBody defines parameters for UnfollowListId.
type UnfollowListIdJSONBody = map[string]interface{}

// FollowListIdJSONBody defines parameters for FollowListId.
type FollowListIdJSONBody = map[string]interface{}

// FollowListIdParams defines parameters for FollowListId.
type FollowListIdParams struct {
	ContentType string `json:"Content-Type"`
}

// GetSearchMangaParams defines parameters for GetSearchManga.
type GetSearchMangaParams struct {
	Limit          *int                  `form:"limit,omitempty" json:"limit,omitempty"`
	Offset         *int                  `form:"offset,omitempty" json:"offset,omitempty"`
	Title          *string               `form:"title,omitempty" json:"title,omitempty"`
	AuthorOrArtist *openapi_types.UUID   `form:"authorOrArtist,omitempty" json:"authorOrArtist,omitempty"`
	Authors        *[]openapi_types.UUID `form:"authors[],omitempty" json:"authors[],omitempty"`
	Artists        *[]openapi_types.UUID `form:"artists[],omitempty" json:"artists[],omitempty"`

	// Year Year of release or none
	Year *struct {
		union json.RawMessage
	} `form:"year,omitempty" json:"year,omitempty"`
	IncludedTags                *[]openapi_types.UUID                         `form:"includedTags[],omitempty" json:"includedTags[],omitempty"`
	IncludedTagsMode            *GetSearchMangaParamsIncludedTagsMode         `form:"includedTagsMode,omitempty" json:"includedTagsMode,omitempty"`
	ExcludedTags                *[]openapi_types.UUID                         `form:"excludedTags[],omitempty" json:"excludedTags[],omitempty"`
	ExcludedTagsMode            *GetSearchMangaParamsExcludedTagsMode         `form:"excludedTagsMode,omitempty" json:"excludedTagsMode,omitempty"`
	Status                      *[]GetSearchMangaParamsStatus                 `form:"status[],omitempty" json:"status[],omitempty"`
	OriginalLanguage            *[]string                                     `form:"originalLanguage[],omitempty" json:"originalLanguage[],omitempty"`
	ExcludedOriginalLanguage    *[]string                                     `form:"excludedOriginalLanguage[],omitempty" json:"excludedOriginalLanguage[],omitempty"`
	AvailableTranslatedLanguage *[]string                                     `form:"availableTranslatedLanguage[],omitempty" json:"availableTranslatedLanguage[],omitempty"`
	PublicationDemographic      *[]GetSearchMangaParamsPublicationDemographic `form:"publicationDemographic[],omitempty" json:"publicationDemographic[],omitempty"`

	// Ids Manga ids (limited to 100 per request)
	Ids            *[]openapi_types.UUID                `form:"ids[],omitempty" json:"ids[],omitempty"`
	ContentRating  *[]GetSearchMangaParamsContentRating `form:"contentRating[],omitempty" json:"contentRating[],omitempty"`
	CreatedAtSince *string                              `form:"createdAtSince,omitempty" json:"createdAtSince,omitempty"`
	UpdatedAtSince *string                              `form:"updatedAtSince,omitempty" json:"updatedAtSince,omitempty"`
	Order          *struct {
		CreatedAt             *GetSearchMangaParamsOrderCreatedAt             `json:"createdAt,omitempty"`
		FollowedCount         *GetSearchMangaParamsOrderFollowedCount         `json:"followedCount,omitempty"`
		LatestUploadedChapter *GetSearchMangaParamsOrderLatestUploadedChapter `json:"latestUploadedChapter,omitempty"`
		Rating                *GetSearchMangaParamsOrderRating                `json:"rating,omitempty"`
		Relevance             *GetSearchMangaParamsOrderRelevance             `json:"relevance,omitempty"`
		Title                 *GetSearchMangaParamsOrderTitle                 `json:"title,omitempty"`
		UpdatedAt             *GetSearchMangaParamsOrderUpdatedAt             `json:"updatedAt,omitempty"`
		Year                  *GetSearchMangaParamsOrderYear                  `json:"year,omitempty"`
	} `json:"order,omitempty"`
	Includes               *ReferenceExpansionManga                    `form:"includes[],omitempty" json:"includes[],omitempty"`
	HasAvailableChapters   *GetSearchMangaParamsHasAvailableChapters   `form:"hasAvailableChapters,omitempty" json:"hasAvailableChapters,omitempty"`
	HasUnavailableChapters *GetSearchMangaParamsHasUnavailableChapters `form:"hasUnavailableChapters,omitempty" json:"hasUnavailableChapters,omitempty"`
	Group                  *openapi_types.UUID                         `form:"group,omitempty" json:"group,omitempty"`
}

// GetSearchMangaParamsYear0 defines parameters for GetSearchManga.
type GetSearchMangaParamsYear0 = int

// GetSearchMangaParamsYear1 defines parameters for GetSearchManga.
type GetSearchMangaParamsYear1 string

// GetSearchMangaParamsIncludedTagsMode defines parameters for GetSearchManga.
type GetSearchMangaParamsIncludedTagsMode string

// GetSearchMangaParamsExcludedTagsMode defines parameters for GetSearchManga.
type GetSearchMangaParamsExcludedTagsMode string

// GetSearchMangaParamsStatus defines parameters for GetSearchManga.
type GetSearchMangaParamsStatus string

// GetSearchMangaParamsPublicationDemographic defines parameters for GetSearchManga.
type GetSearchMangaParamsPublicationDemographic string

// GetSearchMangaParamsContentRating defines parameters for GetSearchManga.
type GetSearchMangaParamsContentRating string

// GetSearchMangaParamsOrderCreatedAt defines parameters for GetSearchManga.
type GetSearchMangaParamsOrderCreatedAt string

// GetSearchMangaParamsOrderFollowedCount defines parameters for GetSearchManga.
type GetSearchMangaParamsOrderFollowedCount string

// GetSearchMangaParamsOrderLatestUploadedChapter defines parameters for GetSearchManga.
type GetSearchMangaParamsOrderLatestUploadedChapter string

// GetSearchMangaParamsOrderRating defines parameters for GetSearchManga.
type GetSearchMangaParamsOrderRating string

// GetSearchMangaParamsOrderRelevance defines parameters for GetSearchManga.
type GetSearchMangaParamsOrderRelevance string

// GetSearchMangaParamsOrderTitle defines parameters for GetSearchManga.
type GetSearchMangaParamsOrderTitle string

// GetSearchMangaParamsOrderUpdatedAt defines parameters for GetSearchManga.
type GetSearchMangaParamsOrderUpdatedAt string

// GetSearchMangaParamsOrderYear defines parameters for GetSearchManga.
type GetSearchMangaParamsOrderYear string

// GetSearchMangaParamsHasAvailableChapters defines parameters for GetSearchManga.
type GetSearchMangaParamsHasAvailableChapters string

// GetSearchMangaParamsHasUnavailableChapters defines parameters for GetSearchManga.
type GetSearchMangaParamsHasUnavailableChapters string

// PostMangaParams defines parameters for PostManga.
type PostMangaParams struct {
	ContentType string `json:"Content-Type"`
}

// GetMangaDraftsParams defines parameters for GetMangaDrafts.
type GetMangaDraftsParams struct {
	Limit  *int    `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int    `form:"offset,omitempty" json:"offset,omitempty"`
	State  *string `form:"state,omitempty" json:"state,omitempty"`
	Order  *struct {
		CreatedAt *OrderCreatedAt `json:"createdAt,omitempty"`
		Title     *OrderTitle     `json:"title,omitempty"`
		UpdatedAt *OrderUpdatedAt `json:"updatedAt,omitempty"`
		Year      *OrderYear      `json:"year,omitempty"`
	} `json:"order,omitempty"`
	Includes *ReferenceExpansionManga `form:"includes[],omitempty" json:"includes[],omitempty"`
}

// OrderCreatedAt defines parameters for GetMangaDrafts.
type OrderCreatedAt string

// OrderTitle defines parameters for GetMangaDrafts.
type OrderTitle string

// OrderUpdatedAt defines parameters for GetMangaDrafts.
type OrderUpdatedAt string

// OrderYear defines parameters for GetMangaDrafts.
type OrderYear string

// GetMangaIdDraftParams defines parameters for GetMangaIdDraft.
type GetMangaIdDraftParams struct {
	Includes *ReferenceExpansionManga `form:"includes[],omitempty" json:"includes[],omitempty"`
}

// CommitMangaDraftJSONBody defines parameters for CommitMangaDraft.
type CommitMangaDraftJSONBody struct {
	Version *int `json:"version,omitempty"`
}

// GetMangaRandomParams defines parameters for GetMangaRandom.
type GetMangaRandomParams struct {
	Includes         *ReferenceExpansionManga              `form:"includes[],omitempty" json:"includes[],omitempty"`
	ContentRating    *[]GetMangaRandomParamsContentRating  `form:"contentRating[],omitempty" json:"contentRating[],omitempty"`
	IncludedTags     *[]openapi_types.UUID                 `form:"includedTags[],omitempty" json:"includedTags[],omitempty"`
	IncludedTagsMode *GetMangaRandomParamsIncludedTagsMode `form:"includedTagsMode,omitempty" json:"includedTagsMode,omitempty"`
	ExcludedTags     *[]openapi_types.UUID                 `form:"excludedTags[],omitempty" json:"excludedTags[],omitempty"`
	ExcludedTagsMode *GetMangaRandomParamsExcludedTagsMode `form:"excludedTagsMode,omitempty" json:"excludedTagsMode,omitempty"`
}

// GetMangaRandomParamsContentRating defines parameters for GetMangaRandom.
type GetMangaRandomParamsContentRating string

// GetMangaRandomParamsIncludedTagsMode defines parameters for GetMangaRandom.
type GetMangaRandomParamsIncludedTagsMode string

// GetMangaRandomParamsExcludedTagsMode defines parameters for GetMangaRandom.
type GetMangaRandomParamsExcludedTagsMode string

// GetMangaChapterReadmarkers2Params defines parameters for GetMangaChapterReadmarkers2.
type GetMangaChapterReadmarkers2Params struct {
	// Ids Manga ids
	Ids []openapi_types.UUID `form:"ids[]" json:"ids[]"`

	// Grouped Group results by manga ids
	Grouped *bool `form:"grouped,omitempty" json:"grouped,omitempty"`
}

// GetMangaStatusParams defines parameters for GetMangaStatus.
type GetMangaStatusParams struct {
	// Status Used to filter the list by given status
	Status *GetMangaStatusParamsStatus `form:"status,omitempty" json:"status,omitempty"`
}

// GetMangaStatusParamsStatus defines parameters for GetMangaStatus.
type GetMangaStatusParamsStatus string

// GetMangaIdParams defines parameters for GetMangaId.
type GetMangaIdParams struct {
	Includes *ReferenceExpansionManga `form:"includes[],omitempty" json:"includes[],omitempty"`
}

// PutMangaIdJSONBody defines parameters for PutMangaId.
type PutMangaIdJSONBody struct {
	AltTitles                      *[]LocalizedString                        `json:"altTitles,omitempty"`
	Artists                        *[]openapi_types.UUID                     `json:"artists,omitempty"`
	Authors                        *[]openapi_types.UUID                     `json:"authors,omitempty"`
	ChapterNumbersResetOnNewVolume *bool                                     `json:"chapterNumbersResetOnNewVolume,omitempty"`
	ContentRating                  *PutMangaIdJSONBodyContentRating          `json:"contentRating,omitempty"`
	Description                    *LocalizedString                          `json:"description,omitempty"`
	LastChapter                    *string                                   `json:"lastChapter"`
	LastVolume                     *string                                   `json:"lastVolume"`
	Links                          *map[string]string                        `json:"links,omitempty"`
	OriginalLanguage               *string                                   `json:"originalLanguage,omitempty"`
	PrimaryCover                   *openapi_types.UUID                       `json:"primaryCover"`
	PublicationDemographic         *PutMangaIdJSONBodyPublicationDemographic `json:"publicationDemographic"`
	Status                         *PutMangaIdJSONBodyStatus                 `json:"status,omitempty"`
	Tags                           *[]openapi_types.UUID                     `json:"tags,omitempty"`
	Title                          *LocalizedString                          `json:"title,omitempty"`
	Version                        int                                       `json:"version"`

	// Year Year of release
	Year *int `json:"year"`
}

// PutMangaIdParams defines parameters for PutMangaId.
type PutMangaIdParams struct {
	ContentType string `json:"Content-Type"`
}

// PutMangaIdJSONBodyContentRating defines parameters for PutMangaId.
type PutMangaIdJSONBodyContentRating string

// PutMangaIdJSONBodyPublicationDemographic defines parameters for PutMangaId.
type PutMangaIdJSONBodyPublicationDemographic string

// PutMangaIdJSONBodyStatus defines parameters for PutMangaId.
type PutMangaIdJSONBodyStatus string

// GetMangaAggregateParams defines parameters for GetMangaAggregate.
type GetMangaAggregateParams struct {
	TranslatedLanguage *[]string             `form:"translatedLanguage[],omitempty" json:"translatedLanguage[],omitempty"`
	Groups             *[]openapi_types.UUID `form:"groups[],omitempty" json:"groups[],omitempty"`
}

// GetMangaIdFeedParams defines parameters for GetMangaIdFeed.
type GetMangaIdFeedParams struct {
	Limit                    *int                                      `form:"limit,omitempty" json:"limit,omitempty"`
	Offset                   *int                                      `form:"offset,omitempty" json:"offset,omitempty"`
	TranslatedLanguage       *[]string                                 `form:"translatedLanguage[],omitempty" json:"translatedLanguage[],omitempty"`
	OriginalLanguage         *[]string                                 `form:"originalLanguage[],omitempty" json:"originalLanguage[],omitempty"`
	ExcludedOriginalLanguage *[]string                                 `form:"excludedOriginalLanguage[],omitempty" json:"excludedOriginalLanguage[],omitempty"`
	ContentRating            *[]GetMangaIdFeedParamsContentRating      `form:"contentRating[],omitempty" json:"contentRating[],omitempty"`
	ExcludedGroups           *[]openapi_types.UUID                     `form:"excludedGroups[],omitempty" json:"excludedGroups[],omitempty"`
	ExcludedUploaders        *[]openapi_types.UUID                     `form:"excludedUploaders[],omitempty" json:"excludedUploaders[],omitempty"`
	IncludeFutureUpdates     *GetMangaIdFeedParamsIncludeFutureUpdates `form:"includeFutureUpdates,omitempty" json:"includeFutureUpdates,omitempty"`
	CreatedAtSince           *string                                   `form:"createdAtSince,omitempty" json:"createdAtSince,omitempty"`
	UpdatedAtSince           *string                                   `form:"updatedAtSince,omitempty" json:"updatedAtSince,omitempty"`
	PublishAtSince           *string                                   `form:"publishAtSince,omitempty" json:"publishAtSince,omitempty"`
	Order                    *struct {
		Chapter    *GetMangaIdFeedParamsOrderChapter    `json:"chapter,omitempty"`
		CreatedAt  *GetMangaIdFeedParamsOrderCreatedAt  `json:"createdAt,omitempty"`
		PublishAt  *GetMangaIdFeedParamsOrderPublishAt  `json:"publishAt,omitempty"`
		ReadableAt *GetMangaIdFeedParamsOrderReadableAt `json:"readableAt,omitempty"`
		UpdatedAt  *GetMangaIdFeedParamsOrderUpdatedAt  `json:"updatedAt,omitempty"`
		Volume     *GetMangaIdFeedParamsOrderVolume     `json:"volume,omitempty"`
	} `json:"order,omitempty"`
	Includes               *ReferenceExpansionChapter                  `form:"includes[],omitempty" json:"includes[],omitempty"`
	IncludeEmptyPages      *GetMangaIdFeedParamsIncludeEmptyPages      `form:"includeEmptyPages,omitempty" json:"includeEmptyPages,omitempty"`
	IncludeFuturePublishAt *GetMangaIdFeedParamsIncludeFuturePublishAt `form:"includeFuturePublishAt,omitempty" json:"includeFuturePublishAt,omitempty"`
	IncludeExternalUrl     *GetMangaIdFeedParamsIncludeExternalUrl     `form:"includeExternalUrl,omitempty" json:"includeExternalUrl,omitempty"`
	IncludeUnavailable     *GetMangaIdFeedParamsIncludeUnavailable     `form:"includeUnavailable,omitempty" json:"includeUnavailable,omitempty"`
}

// GetMangaIdFeedParamsContentRating defines parameters for GetMangaIdFeed.
type GetMangaIdFeedParamsContentRating string

// GetMangaIdFeedParamsIncludeFutureUpdates defines parameters for GetMangaIdFeed.
type GetMangaIdFeedParamsIncludeFutureUpdates string

// GetMangaIdFeedParamsOrderChapter defines parameters for GetMangaIdFeed.
type GetMangaIdFeedParamsOrderChapter string

// GetMangaIdFeedParamsOrderCreatedAt defines parameters for GetMangaIdFeed.
type GetMangaIdFeedParamsOrderCreatedAt string

// GetMangaIdFeedParamsOrderPublishAt defines parameters for GetMangaIdFeed.
type GetMangaIdFeedParamsOrderPublishAt string

// GetMangaIdFeedParamsOrderReadableAt defines parameters for GetMangaIdFeed.
type GetMangaIdFeedParamsOrderReadableAt string

// GetMangaIdFeedParamsOrderUpdatedAt defines parameters for GetMangaIdFeed.
type GetMangaIdFeedParamsOrderUpdatedAt string

// GetMangaIdFeedParamsOrderVolume defines parameters for GetMangaIdFeed.
type GetMangaIdFeedParamsOrderVolume string

// GetMangaIdFeedParamsIncludeEmptyPages defines parameters for GetMangaIdFeed.
type GetMangaIdFeedParamsIncludeEmptyPages int

// GetMangaIdFeedParamsIncludeFuturePublishAt defines parameters for GetMangaIdFeed.
type GetMangaIdFeedParamsIncludeFuturePublishAt int

// GetMangaIdFeedParamsIncludeExternalUrl defines parameters for GetMangaIdFeed.
type GetMangaIdFeedParamsIncludeExternalUrl int

// GetMangaIdFeedParamsIncludeUnavailable defines parameters for GetMangaIdFeed.
type GetMangaIdFeedParamsIncludeUnavailable string

// PostMangaChapterReadmarkersParams defines parameters for PostMangaChapterReadmarkers.
type PostMangaChapterReadmarkersParams struct {
	// UpdateHistory Adding this will cause the chapter to be stored in the user's reading history
	UpdateHistory *bool `form:"updateHistory,omitempty" json:"updateHistory,omitempty"`
}

// PostMangaIdStatusParams defines parameters for PostMangaIdStatus.
type PostMangaIdStatusParams struct {
	ContentType string `json:"Content-Type"`
}

// GetMangaRelationParams defines parameters for GetMangaRelation.
type GetMangaRelationParams struct {
	Includes *ReferenceExpansionMangaRelation `form:"includes[],omitempty" json:"includes[],omitempty"`
}

// PostMangaRelationParams defines parameters for PostMangaRelation.
type PostMangaRelationParams struct {
	ContentType string `json:"Content-Type"`
}

// GetRatingParams defines parameters for GetRating.
type GetRatingParams struct {
	Manga []openapi_types.UUID `json:"manga"`
}

// PostRatingMangaIdJSONBody defines parameters for PostRatingMangaId.
type PostRatingMangaIdJSONBody struct {
	Rating *int `json:"rating,omitempty"`
}

// GetReportsParams defines parameters for GetReports.
type GetReportsParams struct {
	Limit    *int                      `form:"limit,omitempty" json:"limit,omitempty"`
	Offset   *int                      `form:"offset,omitempty" json:"offset,omitempty"`
	Category *GetReportsParamsCategory `form:"category,omitempty" json:"category,omitempty"`
	ReasonId *openapi_types.UUID       `form:"reasonId,omitempty" json:"reasonId,omitempty"`
	ObjectId *openapi_types.UUID       `form:"objectId,omitempty" json:"objectId,omitempty"`
	Status   *GetReportsParamsStatus   `form:"status,omitempty" json:"status,omitempty"`
	Order    *struct {
		CreatedAt *GetReportsParamsOrderCreatedAt `json:"createdAt,omitempty"`
	} `json:"order,omitempty"`
	Includes *ReferenceExpansionReport `form:"includes[],omitempty" json:"includes[],omitempty"`
}

// GetReportsParamsCategory defines parameters for GetReports.
type GetReportsParamsCategory string

// GetReportsParamsStatus defines parameters for GetReports.
type GetReportsParamsStatus string

// GetReportsParamsOrderCreatedAt defines parameters for GetReports.
type GetReportsParamsOrderCreatedAt string

// PostReportJSONBody defines parameters for PostReport.
type PostReportJSONBody struct {
	Category *PostReportJSONBodyCategory `json:"category,omitempty"`
	Details  *string                     `json:"details,omitempty"`
	ObjectId *openapi_types.UUID         `json:"objectId,omitempty"`
	Reason   *openapi_types.UUID         `json:"reason,omitempty"`
}

// PostReportParams defines parameters for PostReport.
type PostReportParams struct {
	ContentType string `json:"Content-Type"`
}

// PostReportJSONBodyCategory defines parameters for PostReport.
type PostReportJSONBodyCategory string

// PostSettingsJSONBody defines parameters for PostSettings.
type PostSettingsJSONBody struct {
	// Settings A JSON object that can be validated against the lastest available template
	Settings *map[string]interface{} `json:"settings,omitempty"`

	// UpdatedAt Format: 2022-03-14T13:19:37
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// PostSettingsTemplateJSONBody defines parameters for PostSettingsTemplate.
type PostSettingsTemplateJSONBody = map[string]interface{}

// GetStatisticsChaptersParams defines parameters for GetStatisticsChapters.
type GetStatisticsChaptersParams struct {
	Chapter []openapi_types.UUID `json:"chapter[]"`
}

// GetStatisticsGroupsParams defines parameters for GetStatisticsGroups.
type GetStatisticsGroupsParams struct {
	Group []openapi_types.UUID `json:"group[]"`
}

// GetStatisticsMangaParams defines parameters for GetStatisticsManga.
type GetStatisticsMangaParams struct {
	Manga []openapi_types.UUID `json:"manga[]"`
}

// BeginUploadSessionParams defines parameters for BeginUploadSession.
type BeginUploadSessionParams struct {
	ContentType string `json:"Content-Type"`
}

// BeginEditSessionParams defines parameters for BeginEditSession.
type BeginEditSessionParams struct {
	ContentType string `json:"Content-Type"`
}

// UploadCheckApprovalRequiredJSONBody defines parameters for UploadCheckApprovalRequired.
type UploadCheckApprovalRequiredJSONBody struct {
	Locale *string             `json:"locale,omitempty"`
	Manga  *openapi_types.UUID `json:"manga,omitempty"`
}

// PutUploadSessionFileMultipartBody defines parameters for PutUploadSessionFile.
type PutUploadSessionFileMultipartBody struct {
	File *openapi_types.File `json:"file,omitempty"`
}

// PutUploadSessionFileParams defines parameters for PutUploadSessionFile.
type PutUploadSessionFileParams struct {
	ContentType string `json:"Content-Type"`
}

// DeleteUploadedSessionFilesJSONBody defines parameters for DeleteUploadedSessionFiles.
type DeleteUploadedSessionFilesJSONBody = []openapi_types.UUID

// DeleteUploadedSessionFilesParams defines parameters for DeleteUploadedSessionFiles.
type DeleteUploadedSessionFilesParams struct {
	ContentType string `json:"Content-Type"`
}

// CommitUploadSessionParams defines parameters for CommitUploadSession.
type CommitUploadSessionParams struct {
	ContentType string `json:"Content-Type"`
}

// GetUserParams defines parameters for GetUser.
type GetUserParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// Ids User ids (limited to 100 per request)
	Ids      *[]openapi_types.UUID `form:"ids[],omitempty" json:"ids[],omitempty"`
	Username *string               `form:"username,omitempty" json:"username,omitempty"`
	Order    *struct {
		Username *GetUserParamsOrderUsername `json:"username,omitempty"`
	} `json:"order,omitempty"`
}

// GetUserParamsOrderUsername defines parameters for GetUser.
type GetUserParamsOrderUsername string

// GetUserFollowsGroupParams defines parameters for GetUserFollowsGroup.
type GetUserFollowsGroupParams struct {
	Limit    *int                               `form:"limit,omitempty" json:"limit,omitempty"`
	Offset   *int                               `form:"offset,omitempty" json:"offset,omitempty"`
	Includes *ReferenceExpansionScanlationGroup `form:"includes[],omitempty" json:"includes[],omitempty"`
}

// GetUserFollowsListParams defines parameters for GetUserFollowsList.
type GetUserFollowsListParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetUserFollowsMangaParams defines parameters for GetUserFollowsManga.
type GetUserFollowsMangaParams struct {
	Limit    *int                     `form:"limit,omitempty" json:"limit,omitempty"`
	Offset   *int                     `form:"offset,omitempty" json:"offset,omitempty"`
	Includes *ReferenceExpansionManga `form:"includes[],omitempty" json:"includes[],omitempty"`
}

// GetUserFollowsMangaFeedParams defines parameters for GetUserFollowsMangaFeed.
type GetUserFollowsMangaFeedParams struct {
	Limit                    *int                                               `form:"limit,omitempty" json:"limit,omitempty"`
	Offset                   *int                                               `form:"offset,omitempty" json:"offset,omitempty"`
	TranslatedLanguage       *[]string                                          `form:"translatedLanguage[],omitempty" json:"translatedLanguage[],omitempty"`
	OriginalLanguage         *[]string                                          `form:"originalLanguage[],omitempty" json:"originalLanguage[],omitempty"`
	ExcludedOriginalLanguage *[]string                                          `form:"excludedOriginalLanguage[],omitempty" json:"excludedOriginalLanguage[],omitempty"`
	ContentRating            *[]GetUserFollowsMangaFeedParamsContentRating      `form:"contentRating[],omitempty" json:"contentRating[],omitempty"`
	ExcludedGroups           *[]openapi_types.UUID                              `form:"excludedGroups[],omitempty" json:"excludedGroups[],omitempty"`
	ExcludedUploaders        *[]openapi_types.UUID                              `form:"excludedUploaders[],omitempty" json:"excludedUploaders[],omitempty"`
	IncludeFutureUpdates     *GetUserFollowsMangaFeedParamsIncludeFutureUpdates `form:"includeFutureUpdates,omitempty" json:"includeFutureUpdates,omitempty"`
	CreatedAtSince           *string                                            `form:"createdAtSince,omitempty" json:"createdAtSince,omitempty"`
	UpdatedAtSince           *string                                            `form:"updatedAtSince,omitempty" json:"updatedAtSince,omitempty"`
	PublishAtSince           *string                                            `form:"publishAtSince,omitempty" json:"publishAtSince,omitempty"`
	Order                    *struct {
		Chapter    *GetUserFollowsMangaFeedParamsOrderChapter    `json:"chapter,omitempty"`
		CreatedAt  *GetUserFollowsMangaFeedParamsOrderCreatedAt  `json:"createdAt,omitempty"`
		PublishAt  *GetUserFollowsMangaFeedParamsOrderPublishAt  `json:"publishAt,omitempty"`
		ReadableAt *GetUserFollowsMangaFeedParamsOrderReadableAt `json:"readableAt,omitempty"`
		UpdatedAt  *GetUserFollowsMangaFeedParamsOrderUpdatedAt  `json:"updatedAt,omitempty"`
		Volume     *GetUserFollowsMangaFeedParamsOrderVolume     `json:"volume,omitempty"`
	} `json:"order,omitempty"`
	Includes               *ReferenceExpansionChapter                           `form:"includes[],omitempty" json:"includes[],omitempty"`
	IncludeEmptyPages      *GetUserFollowsMangaFeedParamsIncludeEmptyPages      `form:"includeEmptyPages,omitempty" json:"includeEmptyPages,omitempty"`
	IncludeFuturePublishAt *GetUserFollowsMangaFeedParamsIncludeFuturePublishAt `form:"includeFuturePublishAt,omitempty" json:"includeFuturePublishAt,omitempty"`
	IncludeExternalUrl     *GetUserFollowsMangaFeedParamsIncludeExternalUrl     `form:"includeExternalUrl,omitempty" json:"includeExternalUrl,omitempty"`
	IncludeUnavailable     *GetUserFollowsMangaFeedParamsIncludeUnavailable     `form:"includeUnavailable,omitempty" json:"includeUnavailable,omitempty"`
}

// GetUserFollowsMangaFeedParamsContentRating defines parameters for GetUserFollowsMangaFeed.
type GetUserFollowsMangaFeedParamsContentRating string

// GetUserFollowsMangaFeedParamsIncludeFutureUpdates defines parameters for GetUserFollowsMangaFeed.
type GetUserFollowsMangaFeedParamsIncludeFutureUpdates string

// GetUserFollowsMangaFeedParamsOrderChapter defines parameters for GetUserFollowsMangaFeed.
type GetUserFollowsMangaFeedParamsOrderChapter string

// GetUserFollowsMangaFeedParamsOrderCreatedAt defines parameters for GetUserFollowsMangaFeed.
type GetUserFollowsMangaFeedParamsOrderCreatedAt string

// GetUserFollowsMangaFeedParamsOrderPublishAt defines parameters for GetUserFollowsMangaFeed.
type GetUserFollowsMangaFeedParamsOrderPublishAt string

// GetUserFollowsMangaFeedParamsOrderReadableAt defines parameters for GetUserFollowsMangaFeed.
type GetUserFollowsMangaFeedParamsOrderReadableAt string

// GetUserFollowsMangaFeedParamsOrderUpdatedAt defines parameters for GetUserFollowsMangaFeed.
type GetUserFollowsMangaFeedParamsOrderUpdatedAt string

// GetUserFollowsMangaFeedParamsOrderVolume defines parameters for GetUserFollowsMangaFeed.
type GetUserFollowsMangaFeedParamsOrderVolume string

// GetUserFollowsMangaFeedParamsIncludeEmptyPages defines parameters for GetUserFollowsMangaFeed.
type GetUserFollowsMangaFeedParamsIncludeEmptyPages int

// GetUserFollowsMangaFeedParamsIncludeFuturePublishAt defines parameters for GetUserFollowsMangaFeed.
type GetUserFollowsMangaFeedParamsIncludeFuturePublishAt int

// GetUserFollowsMangaFeedParamsIncludeExternalUrl defines parameters for GetUserFollowsMangaFeed.
type GetUserFollowsMangaFeedParamsIncludeExternalUrl int

// GetUserFollowsMangaFeedParamsIncludeUnavailable defines parameters for GetUserFollowsMangaFeed.
type GetUserFollowsMangaFeedParamsIncludeUnavailable string

// GetUserFollowsUserParams defines parameters for GetUserFollowsUser.
type GetUserFollowsUserParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetUserListParams defines parameters for GetUserList.
type GetUserListParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetUserIdListParams defines parameters for GetUserIdList.
type GetUserIdListParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// PostAuthLoginJSONRequestBody defines body for PostAuthLogin for application/json ContentType.
type PostAuthLoginJSONRequestBody = Login

// PostAuthRefreshJSONRequestBody defines body for PostAuthRefresh for application/json ContentType.
type PostAuthRefreshJSONRequestBody = RefreshToken

// PostAuthorJSONRequestBody defines body for PostAuthor for application/json ContentType.
type PostAuthorJSONRequestBody = AuthorCreate

// PutAuthorIdJSONRequestBody defines body for PutAuthorId for application/json ContentType.
type PutAuthorIdJSONRequestBody = AuthorEdit

// PostCaptchaSolveJSONRequestBody defines body for PostCaptchaSolve for application/json ContentType.
type PostCaptchaSolveJSONRequestBody PostCaptchaSolveJSONBody

// PutChapterIdJSONRequestBody defines body for PutChapterId for application/json ContentType.
type PutChapterIdJSONRequestBody = ChapterEdit

// PostCreateApiclientJSONRequestBody defines body for PostCreateApiclient for application/json ContentType.
type PostCreateApiclientJSONRequestBody = ApiClientCreate

// PostEditApiclientJSONRequestBody defines body for PostEditApiclient for application/json ContentType.
type PostEditApiclientJSONRequestBody = ApiClientEdit

// PostRegenerateApiclientSecretJSONRequestBody defines body for PostRegenerateApiclientSecret for application/json ContentType.
type PostRegenerateApiclientSecretJSONRequestBody = PostRegenerateApiclientSecretJSONBody

// UploadCoverMultipartRequestBody defines body for UploadCover for multipart/form-data ContentType.
type UploadCoverMultipartRequestBody UploadCoverMultipartBody

// EditCoverJSONRequestBody defines body for EditCover for application/json ContentType.
type EditCoverJSONRequestBody = CoverEdit

// ForumsThreadCreateJSONRequestBody defines body for ForumsThreadCreate for application/json ContentType.
type ForumsThreadCreateJSONRequestBody ForumsThreadCreateJSONBody

// PostGroupJSONRequestBody defines body for PostGroup for application/json ContentType.
type PostGroupJSONRequestBody = CreateScanlationGroup

// PutGroupIdJSONRequestBody defines body for PutGroupId for application/json ContentType.
type PutGroupIdJSONRequestBody = ScanlationGroupEdit

// PostLegacyMappingJSONRequestBody defines body for PostLegacyMapping for application/json ContentType.
type PostLegacyMappingJSONRequestBody = MappingIdBody

// PostListJSONRequestBody defines body for PostList for application/json ContentType.
type PostListJSONRequestBody = CustomListCreate

// PutListIdJSONRequestBody defines body for PutListId for application/json ContentType.
type PutListIdJSONRequestBody = CustomListEdit

// UnfollowListIdJSONRequestBody defines body for UnfollowListId for application/json ContentType.
type UnfollowListIdJSONRequestBody = UnfollowListIdJSONBody

// FollowListIdJSONRequestBody defines body for FollowListId for application/json ContentType.
type FollowListIdJSONRequestBody = FollowListIdJSONBody

// PostMangaJSONRequestBody defines body for PostManga for application/json ContentType.
type PostMangaJSONRequestBody = MangaCreate

// CommitMangaDraftJSONRequestBody defines body for CommitMangaDraft for application/json ContentType.
type CommitMangaDraftJSONRequestBody CommitMangaDraftJSONBody

// PutMangaIdJSONRequestBody defines body for PutMangaId for application/json ContentType.
type PutMangaIdJSONRequestBody PutMangaIdJSONBody

// PostMangaChapterReadmarkersJSONRequestBody defines body for PostMangaChapterReadmarkers for application/json ContentType.
type PostMangaChapterReadmarkersJSONRequestBody = ChapterReadMarkerBatch

// PostMangaIdStatusJSONRequestBody defines body for PostMangaIdStatus for application/json ContentType.
type PostMangaIdStatusJSONRequestBody = UpdateMangaStatus

// PostMangaRelationJSONRequestBody defines body for PostMangaRelation for application/json ContentType.
type PostMangaRelationJSONRequestBody = MangaRelationCreate

// PostRatingMangaIdJSONRequestBody defines body for PostRatingMangaId for application/json ContentType.
type PostRatingMangaIdJSONRequestBody PostRatingMangaIdJSONBody

// PostReportJSONRequestBody defines body for PostReport for application/json ContentType.
type PostReportJSONRequestBody PostReportJSONBody

// PostSettingsJSONRequestBody defines body for PostSettings for application/json ContentType.
type PostSettingsJSONRequestBody PostSettingsJSONBody

// PostSettingsTemplateJSONRequestBody defines body for PostSettingsTemplate for application/json ContentType.
type PostSettingsTemplateJSONRequestBody = PostSettingsTemplateJSONBody

// BeginUploadSessionJSONRequestBody defines body for BeginUploadSession for application/json ContentType.
type BeginUploadSessionJSONRequestBody = BeginUploadSession

// BeginEditSessionJSONRequestBody defines body for BeginEditSession for application/json ContentType.
type BeginEditSessionJSONRequestBody = BeginEditSession

// UploadCheckApprovalRequiredJSONRequestBody defines body for UploadCheckApprovalRequired for application/json ContentType.
type UploadCheckApprovalRequiredJSONRequestBody UploadCheckApprovalRequiredJSONBody

// PutUploadSessionFileMultipartRequestBody defines body for PutUploadSessionFile for multipart/form-data ContentType.
type PutUploadSessionFileMultipartRequestBody PutUploadSessionFileMultipartBody

// DeleteUploadedSessionFilesJSONRequestBody defines body for DeleteUploadedSessionFiles for application/json ContentType.
type DeleteUploadedSessionFilesJSONRequestBody = DeleteUploadedSessionFilesJSONBody

// CommitUploadSessionJSONRequestBody defines body for CommitUploadSession for application/json ContentType.
type CommitUploadSessionJSONRequestBody = CommitUploadSession

// AsChapterReadMarkerBatch0 returns the union data inside the ChapterReadMarkerBatch as a ChapterReadMarkerBatch0
func (t ChapterReadMarkerBatch) AsChapterReadMarkerBatch0() (ChapterReadMarkerBatch0, error) {
	var body ChapterReadMarkerBatch0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromChapterReadMarkerBatch0 overwrites any union data inside the ChapterReadMarkerBatch as the provided ChapterReadMarkerBatch0
func (t *ChapterReadMarkerBatch) FromChapterReadMarkerBatch0(v ChapterReadMarkerBatch0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeChapterReadMarkerBatch0 performs a merge with any union data inside the ChapterReadMarkerBatch, using the provided ChapterReadMarkerBatch0
func (t *ChapterReadMarkerBatch) MergeChapterReadMarkerBatch0(v ChapterReadMarkerBatch0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsChapterReadMarkerBatch1 returns the union data inside the ChapterReadMarkerBatch as a ChapterReadMarkerBatch1
func (t ChapterReadMarkerBatch) AsChapterReadMarkerBatch1() (ChapterReadMarkerBatch1, error) {
	var body ChapterReadMarkerBatch1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromChapterReadMarkerBatch1 overwrites any union data inside the ChapterReadMarkerBatch as the provided ChapterReadMarkerBatch1
func (t *ChapterReadMarkerBatch) FromChapterReadMarkerBatch1(v ChapterReadMarkerBatch1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeChapterReadMarkerBatch1 performs a merge with any union data inside the ChapterReadMarkerBatch, using the provided ChapterReadMarkerBatch1
func (t *ChapterReadMarkerBatch) MergeChapterReadMarkerBatch1(v ChapterReadMarkerBatch1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ChapterReadMarkerBatch) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	if err != nil {
		return nil, err
	}
	object := make(map[string]json.RawMessage)
	if t.union != nil {
		err = json.Unmarshal(b, &object)
		if err != nil {
			return nil, err
		}
	}

	if t.ChapterIdsRead != nil {
		object["chapterIdsRead"], err = json.Marshal(t.ChapterIdsRead)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'chapterIdsRead': %w", err)
		}
	}

	if t.ChapterIdsUnread != nil {
		object["chapterIdsUnread"], err = json.Marshal(t.ChapterIdsUnread)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'chapterIdsUnread': %w", err)
		}
	}
	b, err = json.Marshal(object)
	return b, err
}

func (t *ChapterReadMarkerBatch) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	if err != nil {
		return err
	}
	object := make(map[string]json.RawMessage)
	err = json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if raw, found := object["chapterIdsRead"]; found {
		err = json.Unmarshal(raw, &t.ChapterIdsRead)
		if err != nil {
			return fmt.Errorf("error reading 'chapterIdsRead': %w", err)
		}
	}

	if raw, found := object["chapterIdsUnread"]; found {
		err = json.Unmarshal(raw, &t.ChapterIdsUnread)
		if err != nil {
			return fmt.Errorf("error reading 'chapterIdsUnread': %w", err)
		}
	}

	return err
}
